{"version":3,"sources":["project_images/amazon.png","project_images/chat.png","project_images/stocks.png","project_images/transact.png","project_images/view.png","project_images/visualizations.png","actions/actionTypes.js","components/Home.js","actions/auth.js","components/Background.js","components/SignUp.js","components/Navbar.js","components/Login.js","components/Footer.js","components/Page404.js","components/Forgot.js","actions/pages.js","components/DetailsPage.js","components/ChatMessage.js","components/ChatBotPage.js","components/TransactionEntry.js","components/GraphPiechart2.js","components/GraphLinechart2.js","components/GraphBargraph2.js","components/DateSelector.js","components/GraphPiechart.js","components/GraphLinechart.js","components/GraphBargraph.js","components/PastTransactions.js","components/StockPage.js","components/WishlistEntry.js","components/AmazonPage.js","components/Details.js","components/Profilepage.js","components/ResetPassword.js","components/App.js","reducers/auth.js","reducers/details.js","reducers/index.js","index.js","store/index.js"],"names":["module","exports","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","SIGNUP_START","SIGNUP_SUCCESS","SIGNUP_FAILURE","AUTHENTICATE_USER","LOG_OUT","CLEAR_AUTH_STATE","FORGOT_START","FORGOT_SUCCESS","FORGOT_FAILURE","SHOW_DETAILS_PAGE","SHOW_CHATBOT_PAGE","VIEW_DETAILS","SHOW_AMAZON_DETAILS","SHOW_STOCK_DETAILS","TRANSACTION_START","TRANSACTION_SUCCESS","TRANSACTION_FAILURE","FETCH_TRANSACTIONS","FETCH_TRANSACTION_START","UPDATE_BOX_SHOW","UPDATE_SUCCESS_TRANSACTION","UPDATE_FAILURE_TRANSACTION","UPDATE_TRANSACTION","DELETE_SUCCESS_TRANSACTION","DELETE_FAILURE_TRANSACTION","DISPLAY_CHAT_MESSAGE","ADD_CHAT_MESSAGE","SHOW_WISHLIST","SHOW_STOCKLIST","FILTER_TRANSACTION","FETCH_DETAILS","SHOW_PIECHART","SHOW_LINECHART","SHOW_BARGRAPH","HIDE_GRAPH","SET_USER_DETAILS","AVG_FETCH_DETAILS","Home","this","props","auth","isLoggedIn","to","id","Grid","container","justify","spacing","align","Paper","elevation","title","description","className","direction","alignItems","item","xs","src","view_img","alt","style","height","width","paddingLeft","marginTop","visualizations_img","amazon_img","chat_img","stocks_img","transact_img","Component","Header","FeaturesHeader","Box","img","connect","state","getFormBody","params","FormBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","login","username","password","dispatch","success","type","fetch","method","headers","body","then","response","status","json","data","localStorage","setItem","token","user","jwt_decode","successmsg","email","user_id","loginSuccess","errormsg","error","signupFailed","signup","confirmpassword","name","fname","lname","password_confirm","first_name","last_name","msg","authenticateUser","logoutUser","clearAuth","startForgot","forgotFailed","forgotSuccess","userDetails","Background","config","num","rps","radius","life","v","scale","position","color","bg","SignUp","handleSubmitForm","e","preventDefault","confirmPassword","handleEmail","setState","target","value","handleLName","handleFName","handleName","handlePassword","handleCPassword","inProgress","placeholder","required","onChange","onClick","disabled","Navbar","logout","removeItem","Typography","Button","variant","Login","TextField","fullWidth","Footer","Page404","console","log","forgot","showDetails","showChatBot","viewdetails","showStockDetails","showAmazonDetails","addTransaction","category","credit","amount","Authorization","getItem","fetchStocklist","fetchedTransactions","transactions","fetchTransactions","reverse","showUpdateBox","updateTransactionSuccess","updateTransactionFailure","deleteSuccess","deleteFailure","deleteTransaction","url","fetchDetails","catch","addChatMessage","chatMsg","pastMessages","results","fetchWishlist","wishlist","stocklist","fetchDetailsYear","year","fetchedDetails","fetchDetailsMonth","month","fetchDetailsYearMonth","details","avgFilter","start","end","details_week","details_month","week","DetailsPage","handleChange","event","handleChange2","handleChange3","handleChange4","handleSubmit","type2","setTimeout","dummy","ChatMessage","message","self","content","ChatBotPage","typedMessage","new_message","speak_button","document","getElementsByTagName","setAttribute","click","newMessage","messages","text_to_be_spoken","length","map","index","key","text","TransactionEntry","handleUpdate","handleDelete","transaction","hide_button","data-tip","GraphPiechart2","labels","datasets","label","monday","tuesday","wednesday","thursday","friday","saturday","sunday","backgroundColor","borderColor","options","display","fontSize","legend","january","february","march","april","may","june","july","august","september","october","november","december","GraphLinechart2","GraphBargraph2","DateSelector","startDate","endDate","handleApply","split","show","piechart","linechart","bargraph","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","January","February","March","April","May","June","July","August","September","October","November","December","sundy","GraphPiechart","chartData","food","healthcare","housing","income","recreation","transportation","stock","expenditure","savings","GraphLinechart","GraphBargraph","PastTransactions","handleChart","chart","handleDate","date","handleMonth","handleYear","updateTransaction","handleSubmit2","filterTransaction1","filterTransaction2","filterTransaction3","filterTransaction4","filterTransaction5","filterTransaction6","filterTransaction7","handleSubmit3","pieChart","barGraph","handleSubmit4","loading","update","detailsList","totalExpenditure","StockPage","handleAmount","entry","owned","current_price","WishlistEntry","border","image_url","href","rel","price","AmazonPage","showArrows","showThumbs","Details","applyDetailsForm","applyChatBot","applyStock","applyAmazon","viewDetails","detailsForm","chatBot","viewPastDetails","amazon","Profilepage","fieldName","val","handleSave","old","new_password","confirm_password","oldpassword","uname","updateProfile","old_password","editMode","ResetPassword","pswd","cpswd","reset","match","handlepswd","handlecpswd","App","exact","path","component","Forgot","Profile","require","initialAuthState","initialTransactionState","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.32fd6d22.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/amazon.8db48c22.png\";","module.exports = __webpack_public_path__ + \"static/media/chat.914adc5d.png\";","module.exports = __webpack_public_path__ + \"static/media/stocks.bced2990.png\";","module.exports = __webpack_public_path__ + \"static/media/transact.c11318ac.png\";","module.exports = __webpack_public_path__ + \"static/media/view.99d6c27b.png\";","module.exports = __webpack_public_path__ + \"static/media/visualizations.335a95f8.png\";","//login\r\nexport const LOGIN_START = \"LOGIN_START\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\r\n\r\n//signup\r\nexport const SIGNUP_START = \"SIGNUP_START\";\r\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\r\nexport const SIGNUP_FAILURE = \"SIGNUP_FAILURE\";\r\n\r\n//Authenticate\r\nexport const AUTHENTICATE_USER = \"AUTHENTICATE_USER\";\r\n\r\n//logout\r\nexport const LOG_OUT = \"LOG_OUT\";\r\n\r\n//clear messages \r\nexport const CLEAR_AUTH_STATE = \"CLEAR_AUTH_STATE\";\r\n\r\n\r\n//Forgot password\r\nexport const FORGOT_START = \"FORGOT_START\";\r\nexport const FORGOT_SUCCESS = \"FORGOT_SUCCESS\";\r\nexport const FORGOT_FAILURE = \"FORGOT_FAILURE\";\r\n\r\n//Switch tabs\r\nexport const SHOW_DETAILS_PAGE =\"SHOW_DETAILS_PAGE\";\r\nexport const SHOW_CHATBOT_PAGE =\"SHOW_CHATBOT_PAGE\";\r\nexport const VIEW_DETAILS =\"VIEW_DETAILS\";\r\nexport const SHOW_AMAZON_DETAILS =\"SHOW_AMAZON_DETAILS\";\r\nexport const SHOW_STOCK_DETAILS =\"SHOW_STOCK_DETAILS\";\r\n\r\n\r\n\r\n//ADD Transactions\r\nexport const TRANSACTION_START = \"TRANSACTION_START\";\r\nexport const TRANSACTION_SUCCESS = \"TRANSACTION_SUCCESS\";\r\nexport const TRANSACTION_FAILURE = \"TRANSACTION_FAILURE\";\r\n\r\n//Fetch Transactions\r\nexport const FETCH_TRANSACTIONS = \"FETCH_TRANSACTIONS\";\r\nexport const FETCH_TRANSACTION_START = \"FETCH_TRANSACTION_START\";\r\n\r\n//Update Transaction\r\nexport const UPDATE_BOX_SHOW = \"UPDATE_BOX_SHOW\";\r\nexport const UPDATE_SUCCESS_TRANSACTION = \"UPDATE_TRANSACTION\";\r\nexport const UPDATE_FAILURE_TRANSACTION=\"UPDATE_FAILURE_TRANSACTION\";\r\nexport const UPDATE_TRANSACTION = \"UPDATE_TRANSACTION\";\r\n\r\n\r\n\r\n//delete transaction\r\nexport const DELETE_SUCCESS_TRANSACTION = \"DELETE_SUCCESS_TRANSACTION\";\r\nexport const DELETE_FAILURE_TRANSACTION = \"DELETE_FAILURE_TRANSACTION\";\r\n\r\n\r\n//chat messages\r\nexport const DISPLAY_CHAT_MESSAGE = \"DISPLAY_CHAT_MESSAGE\";\r\nexport const ADD_CHAT_MESSAGE =\"ADD_CHAT_MESSAGE\";\r\n\r\n//wishlist\r\nexport const SHOW_WISHLIST = \"SHOW_WISHLIST\";\r\n\r\n//stocklist\r\nexport const SHOW_STOCKLIST = \"SHOW_STOCKLIST\";\r\n\r\n//filter transactions\r\nexport const FILTER_TRANSACTION=\"FILTER_TRANSACTION\";\r\n\r\n//fetch details\r\nexport const FETCH_DETAILS = \"FETCH_DETAILS\";\r\n\r\n//show graphs\r\nexport const SHOW_PIECHART=\"SHOW_PIECHART\";\r\nexport const SHOW_LINECHART=\"SHOW_LINECHART\";\r\nexport const SHOW_BARGRAPH=\"SHOW_BARGRAPH\";\r\nexport const HIDE_GRAPH =\"HIDE_GRAPH\";\r\n\r\n\r\n//reset user details on updation of profile\r\nexport const SET_USER_DETAILS=\"SET_USER_DETAILS\";\r\n\r\n//average details\r\nexport const AVG_FETCH_DETAILS=\"AVG_FETCH_DETAILS\";","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n//css\r\nimport \"../styles.css\";\r\n//images\r\nimport amazon_img from \"../project_images/amazon.png\"\r\nimport chat_img from \"../project_images/chat.png\"\r\nimport stocks_img from \"../project_images/stocks.png\"\r\nimport transact_img from \"../project_images/transact.png\"\r\nimport view_img from \"../project_images/view.png\"\r\nimport visualizations_img from \"../project_images/visualizations.png\"\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nclass Home extends Component {\r\n    \r\n    render() {\r\n        const {isLoggedIn} = this.props.auth;\r\n        //so that logged in users don't visit this page\r\n        //this page is only for not logged in user\r\n        if (isLoggedIn) {\r\n            return <Redirect to=\"/details\"/>;\r\n        }\r\n\r\n        return (\r\n            <div >\r\n                <div id='body part1'>\r\n                <Grid container  justify=\"space-between\" spacing={2}>\r\n                <Header/>\r\n                <Grid align=\"center\">\r\n                <br></br><br></br>\r\n                </Grid>\r\n                <Grid align=\"center\">\r\n                <Paper elevation={12}>\r\n                <Box \r\n                    title='About the Project' \r\n                    description='DONNA is a financial assistant who helps you get more for your money.It is basically an application which helps a user keep track of all their financial expenditures \r\n                    and help the user to spend smarter and save more and help us get more for our money'\r\n                /></Paper>\r\n                <br></br><br></br>\r\n                </Grid>\r\n                <Grid align=\"center\">\r\n                <Paper elevation={12}>\r\n                <Box \r\n                    title='Our Motivation'\r\n                    description='Living while constantly worrying about money is no fun. \r\n                    Nevertheless, money is the main cause of stress in the world.Simply put, we were not made to stress about money.\r\n                     As humans, our natural instincts urge us to do what we love.That’s why DONNA should exist.\r\n                    She will help us get more for our money so we can focus on what really matters: enjoying life.'\r\n                /></Paper>\r\n                <br></br><br></br>\r\n                </Grid>\r\n                <Grid align=\"center\">\r\n                <Paper elevation={12}>\r\n                <Box \r\n                    title='What can Donna Do for you?' \r\n                    description='This Web Application is accompanied with an AI Chat Bot wherein the user can\r\n                    provide specific details like his monthly budget he has finalized on different activities, his \r\n                    interest fields, his spending activities etc and on the basis of that DONNA will help the user \r\n                    to save more.'\r\n                /></Paper>\r\n                <br></br><br></br>\r\n            \r\n                </Grid>\r\n                </Grid>\r\n                </div><div id=\"body\" className=\"part2\">\r\n                <FeaturesHeader/>\r\n                <Grid container\r\n                direction=\"row\"\r\n                justify=\"space-evenly\"\r\n                alignItems=\"center\"\r\n                spacing={24}>\r\n                <Grid item xs={4}>\r\n                <Paper elevation={8}>\r\n                <Box \r\n                    className='section'\r\n                    title='Track' \r\n                    description = 'You can view your entire history or filter to a specific query' \r\n                />\r\n                <img src={view_img} alt=\"Logo\"  style={{height:'250px',width:'450px',paddingLeft:'15%',marginTop:'-30px' }}  /></Paper></Grid>\r\n                <Grid item xs={4}>\r\n                <Paper elevation={8}>\r\n                <Box \r\n                    className='section'\r\n                    title='Visualize' \r\n                    description = 'Visualize your expenditure for better understanding' \r\n                />\r\n                <img src={visualizations_img} alt=\"Logo\" style={{height:'250px',width:'450px',paddingLeft:'15%',marginTop:'-30px' }} /></Paper></Grid>\r\n                <Grid item xs={4}>\r\n                <Paper elevation={8}>\r\n                <Box \r\n                    className='section'\r\n                    title='Amazon Wishlist'\r\n                    description = 'Donna allows you to track your amazon wishlist and gives intelligent price drop recommendations' \r\n                />\r\n                <img src={amazon_img} alt=\"Logo\"  style={{height:'250px',width:'450px',paddingLeft:'15%',marginTop:'-30px' }}  /></Paper></Grid>\r\n                <Grid item xs={4}>\r\n                <Paper elevation={8}>\r\n                <Box \r\n                    className='section'\r\n                    title='Chat bot' \r\n                    description = 'Donna allows you to interact easily with the system using a friendly chat bot' \r\n                />\r\n                <img src={chat_img} alt=\"Logo\"  style={{height:'250px',width:'450px',paddingLeft:'15%',marginTop:'-30px' }} /></Paper></Grid>\r\n                <Grid item xs={4}>\r\n                <Paper elevation={8}>\r\n                <Box \r\n                    className='section'\r\n                    title='Stock Portfolio' \r\n                    description = 'Track your Stock portfolio with the ability to easily buy and sell stocks' \r\n                />\r\n                <img src={stocks_img} alt=\"Logo\"  style={{height:'250px',width:'450px',paddingLeft:'15%',marginTop:'-30px' }} /></Paper></Grid>\r\n                <Grid item xs={4}>\r\n                <Paper elevation={8}>\r\n                <Box \r\n                    className='section'\r\n                    title='Daily Transactions' \r\n                    description = 'Enter your daily transaction using this easy to fill form' \r\n                />\r\n                <img src={transact_img} alt=\"Logo\" style={{height:'250px',width:'450px',paddingLeft:'15%',marginTop:'-30px' }} /></Paper></Grid>\r\n                </Grid>\r\n            </div> \r\n            </div>\r\n        );\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.auth\r\n    };\r\n}\r\nconst Header = () =>{\r\n    return(\r\n        <div className='header'>\r\n            <span className='header-title'>\r\n                DONNA\r\n            </span>\r\n            <br/>\r\n            <span className=\"header-text\">\r\n                Your all in one Financial Assistant\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\nconst FeaturesHeader = () =>{\r\n    return(\r\n        <div className='header'>\r\n            <span className='header-title'>\r\n                Features\r\n            </span>\r\n            <br/>\r\n        </div>\r\n    );\r\n}\r\nconst Box = (props) =>{\r\n    return(\r\n        <div className={props.className} >\r\n            <div className=\"small-div\">\r\n                <i className={props.className}></i>\r\n                <img src={props.img} alt=''/>\r\n            </div>\r\n\r\n            <div className=\"big-div\">\r\n                <span className='div-title'>\r\n                    {props.title}\r\n                </span>\r\n                <br/>\r\n                <span>\r\n                    {props.description}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import {\r\n  LOGIN_START,\r\n  LOGIN_FAILURE,\r\n  LOGIN_SUCCESS,\r\n  SIGNUP_START,\r\n  SIGNUP_FAILURE,\r\n  SIGNUP_SUCCESS,\r\n  AUTHENTICATE_USER,\r\n  LOG_OUT,\r\n  CLEAR_AUTH_STATE,\r\n  FORGOT_START,\r\n  FORGOT_FAILURE,\r\n  FORGOT_SUCCESS,\r\n  SET_USER_DETAILS,\r\n} from \"./actionTypes\";\r\n// @ts-ignore\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n//Form Body\r\n//converting data in format variable1=key1&variable2=key2...\r\n//this needs to be checked with django api if this format not accepted then send json object\r\nfunction getFormBody(params) {\r\n  let FormBody = [];\r\n  for (let property in params) {\r\n    let encodedKey = encodeURIComponent(property);\r\n    let encodedValue = encodeURIComponent(params[property]);\r\n    FormBody.push(encodedKey + \"=\" + encodedValue);\r\n  }\r\n  return FormBody.join(\"&\");\r\n}\r\n\r\n//login\r\n\r\n//to start login and disable login button to prevent the server from numerous request from same user\r\nexport function startLogin() {\r\n  return {\r\n    type: LOGIN_START,\r\n  };\r\n}\r\n\r\n//display login failed message\r\nexport function loginFailed(errormsg) {\r\n  return {\r\n    type: LOGIN_FAILURE,\r\n    error: errormsg,\r\n  };\r\n}\r\n\r\n//display login success message\r\nexport function loginSuccess(successmsg, username, email, user_id) {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    username,\r\n    email,\r\n    user_id,\r\n    success: successmsg,\r\n  };\r\n}\r\n\r\n//send login request to backend\r\nexport function login(username, password) {\r\n  return (dispatch) => {\r\n    var success = false;\r\n    dispatch(startLogin());\r\n    const url = \"/api/token/\";\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n      },\r\n      body: getFormBody({\r\n        username: username,\r\n        password,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          success = true;\r\n          return response.json();\r\n        } else {\r\n          return response.json();\r\n        }\r\n      })\r\n      .then((data) => {\r\n        if (success) {\r\n          localStorage.setItem(\"DONNA\", data.token);\r\n          const user = jwt_decode(data.token);\r\n          dispatch(\r\n            loginSuccess(\r\n              \"Login Successfull\",\r\n              user.username,\r\n              user.email,\r\n              user.user_id\r\n            )\r\n          );\r\n        } else {\r\n          dispatch(loginFailed(\"Username or Password is Incorrect\"));\r\n        }\r\n      });\r\n  };\r\n}\r\n\r\n//signup\r\n\r\n//disable signup button\r\nexport function startsignup() {\r\n  return {\r\n    type: SIGNUP_START,\r\n  };\r\n}\r\n//signup failed message\r\nexport function signupFailed(errormsg) {\r\n  return {\r\n    type: SIGNUP_FAILURE,\r\n    error: errormsg,\r\n  };\r\n}\r\n//signup success message\r\nexport function signupSuccess(msg) {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    success: msg,\r\n  };\r\n}\r\n//send signup details to backend\r\nexport function signup(email, password, confirmpassword, name, fname, lname) {\r\n  return (dispatch) => {\r\n    var success = false;\r\n    dispatch(startsignup());\r\n    const url = \"/register\";\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n      },\r\n      body: getFormBody({\r\n        username: name,\r\n        email,\r\n        password,\r\n        password_confirm: confirmpassword,\r\n        first_name: fname,\r\n        last_name: lname,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 201) {\r\n          success = true;\r\n          return response.json();\r\n        } else {\r\n          return response.json();\r\n        }\r\n      })\r\n      .then((data) => {\r\n        if (success) {\r\n          dispatch(\r\n            signupSuccess(\"SignUp successfull please LogIn to continue\")\r\n          );\r\n          return;\r\n        }\r\n        if (data.username) {\r\n          dispatch(signupFailed(\"User with this UserName already exists\"));\r\n        } else if (data.password) {\r\n          dispatch(\r\n            signupFailed(\"Password and Confirm Password fields Don't match\")\r\n          );\r\n        } else {\r\n          dispatch(signupFailed(\"Signup Failed Please Try Again\"));\r\n        }\r\n      });\r\n  };\r\n}\r\n\r\n//authenticate and logout\r\n\r\n//set the user details in redux store for later use\r\nexport function authenticateUser(user) {\r\n  return {\r\n    type: AUTHENTICATE_USER,\r\n    username: user.username,\r\n    email: user.email,\r\n    user_id: user.user_id,\r\n  };\r\n}\r\n//remove the user details from redux store\r\nexport function logoutUser() {\r\n  return {\r\n    type: LOG_OUT,\r\n  };\r\n}\r\n//clear the success and errror messages on unmounting the component\r\nexport function clearAuth() {\r\n  return {\r\n    type: CLEAR_AUTH_STATE,\r\n  };\r\n}\r\n\r\n//FORGOT PASSWORD\r\nexport function startForgot() {\r\n  return {\r\n    type: FORGOT_START,\r\n  };\r\n}\r\n//display forgot failed msg\r\nexport function forgotFailed(errormsg) {\r\n  return {\r\n    type: FORGOT_FAILURE,\r\n    error: errormsg,\r\n  };\r\n}\r\n//forgot success msg\r\nexport function forgotSuccess(successmsg) {\r\n  return {\r\n    type: FORGOT_SUCCESS,\r\n    success: successmsg,\r\n  };\r\n}\r\n\r\n//send email to backend when user clicks on forgot password\r\nexport function forgot(email) {\r\n  return (dispatch) => {\r\n    dispatch(startForgot());\r\n    var success = false;\r\n    const url = \"/api/password_reset/\";\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n      },\r\n      body: getFormBody({ email }),\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          success = true;\r\n          return response.json();\r\n        } else {\r\n          return response.json();\r\n        }\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (success) {\r\n          dispatch(\r\n            forgotSuccess(\"Reset Link Sent to your Registered Email Id\")\r\n          );\r\n        } else if (data.email) {\r\n          dispatch(forgotFailed(data.email));\r\n        }\r\n      });\r\n  };\r\n}\r\n\r\n\r\n//reset password\r\nexport function reset(pswd,token) {\r\n  return (dispatch) => {\r\n    console.log(pswd,token);\r\n    dispatch(startForgot());\r\n    var success = false;\r\n    const url = \"/api/password_reset/confirm/\";\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n      },\r\n      body: getFormBody({ token,password:pswd }),\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n\r\n        if (response.status === 200) {\r\n          success = true;\r\n          return response.json();\r\n        } else {\r\n          return response.json();\r\n        }\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n\r\n        if (success) {\r\n          dispatch(\r\n            forgotSuccess(\"Password changed successfully.Login to continue\")\r\n          );\r\n        } else if (data.email) {\r\n          dispatch(forgotFailed(\"Password too small.Please use atleast 10 characters..\"));\r\n        }\r\n      });\r\n  };\r\n}\r\n//fetch user\r\n\r\n//fetch user details from backend\r\nexport function userDetails(email, lname, fname) {\r\n  return {\r\n    type: SET_USER_DETAILS,\r\n    email,\r\n    lname,\r\n    fname,\r\n  };\r\n}\r\nexport function fetchUser() {\r\n  return (dispatch) => {\r\n    var success = false;\r\n    const url = `/user`;\r\n\r\n    fetch(url, {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"DONNA\")}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          success = true;\r\n          return response.json();\r\n        } else {\r\n          return response.json();\r\n        }\r\n      })\r\n      .then((data) => {\r\n        if (success) {\r\n          dispatch(\r\n            userDetails(data[0].email, data[0].last_name, data[0].first_name)\r\n          );\r\n          return;\r\n        } else {\r\n          return;\r\n        }\r\n      });\r\n  };\r\n}\r\n\r\n//update profile\r\n\r\n//edit user profile\r\nexport function updateProfile(email, fname, lname, uname) {\r\n  return (dispatch) => {\r\n    dispatch(startForgot());\r\n    var success = false;\r\n    const url = \"/edit_user\";\r\n    fetch(url, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        Authorization: `Bearer ${localStorage.getItem(\"DONNA\")}`,\r\n      },\r\n      body: getFormBody({\r\n        first_name: fname,\r\n        last_name: lname,\r\n        username: uname,\r\n        email: email,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          success = true;\r\n          return response.json();\r\n        } else {\r\n          return response.json();\r\n        }\r\n      })\r\n      .then((data) => {\r\n        if (success) {\r\n          localStorage.setItem(\"DONNA\", data.token);\r\n          const user = jwt_decode(data.token);\r\n          dispatch(\r\n            authenticateUser({\r\n              username: user.username,\r\n              email: user.email,\r\n              user_id: user.user_id,\r\n            })\r\n          );\r\n          dispatch(userDetails(email, lname, fname));\r\n          dispatch(forgotSuccess(data.message));\r\n          return;\r\n        } else {\r\n          if (data.message) {\r\n            dispatch(forgotFailed(data.message));\r\n            return;\r\n          } else {\r\n            dispatch(\r\n              forgotFailed(\r\n                \"Sorry Profeturn;ile updation Failed..Plz try again!!!\"\r\n              )\r\n            );\r\n            return;\r\n          }\r\n        }\r\n      })\r\n      .catch(() =>\r\n        dispatch(\r\n          forgotFailed(\"Sorry Profile updation Failed..Plz try again!!!\")\r\n        )\r\n      );\r\n  };\r\n}\r\n//update password\r\nexport function updatePassword(old, new_password, confirm_password) {\r\n  return (dispatch) => {\r\n    dispatch(startForgot());\r\n    var success = false;\r\n    const url = \"/change_password\";\r\n    fetch(url, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        Authorization: `Bearer ${localStorage.getItem(\"DONNA\")}`,\r\n      },\r\n      body: getFormBody({\r\n        old_password: old,\r\n        new_password: new_password,\r\n        password_confirm: confirm_password,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          success = true;\r\n          return response.json();\r\n        } else {\r\n          return response.json();\r\n        }\r\n      })\r\n      .then((data) => {\r\n        if (success) {\r\n          console.log(data);\r\n          dispatch(forgotSuccess(\"Profile updated successfully !!!!\"));\r\n          return;\r\n        } else {\r\n          if (data.old_password) {\r\n            dispatch(\r\n              forgotFailed(\"Old Password does not match..Plz try again!!!\")\r\n            );\r\n            return;\r\n          } else {\r\n            dispatch(\r\n              forgotFailed(\"Sorry Profile updation Failed..Plz try again!!!\")\r\n            );\r\n            return;\r\n          }\r\n        }\r\n      })\r\n      .catch(() =>\r\n        dispatch(\r\n          forgotFailed(\"Sorry Profile updation Failed..Plz try again!!!\")\r\n        )\r\n      );\r\n  };\r\n}\r\n","import React,{Component} from 'react'\r\nimport ParticlesBg from 'particles-bg'\r\nclass Background extends Component{\r\n    render(){\r\n        let config = {\r\n            num: [6],\r\n            rps: 1.2,\r\n            radius: [10,100],\r\n            life: [1.5, 3],\r\n            v: [0.4],\r\n            scale: [0.8,0.6],\r\n            position: \"all\", \r\n            color: [\"random\"],\r\n            \r\n          };\r\n        return(\r\n            <ParticlesBg type=\"custom\" config={config} bg={true}/>\r\n        )\r\n    }\r\n}\r\nexport default Background;","import React, {Component} from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nimport {connect} from \"react-redux\";\r\n//actions\r\nimport {signup, clearAuth} from \"../actions/auth\";\r\nimport Background from './Background';\r\n\r\nclass SignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fname:\"\",\r\n            lname:\"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            name: \"\",\r\n            confirmPassword: \"\",\r\n        };\r\n    }\r\n\r\n    //to clear the error if it comes on reload or whenever the user shifts fro this page\r\n    componentWillUnmount() {\r\n        this.props.dispatch(clearAuth());\r\n    }\r\n\r\n    //to submi the form\r\n    handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        const {email, password, confirmPassword, name,fname,lname} = this.state;\r\n        if (email && confirmPassword && name && password) {\r\n            this.props.dispatch(signup(email, password, confirmPassword, name,fname,lname));\r\n        }\r\n    };\r\n\r\n    //taking inputs\r\n    handleEmail = (e) => {\r\n        this.setState({\r\n            email: e.target.value,\r\n        });\r\n    };\r\n    handleLName = (e) => {\r\n        this.setState({\r\n            lname: e.target.value,\r\n        });\r\n    };\r\n    handleFName = (e) => {\r\n        this.setState({\r\n            fname: e.target.value,\r\n        });\r\n    };\r\n    handleName = (e) => {\r\n        this.setState({\r\n            name: e.target.value,\r\n        });\r\n    };\r\n    handlePassword = (e) => {\r\n        this.setState({\r\n            password: e.target.value,\r\n        });\r\n    };\r\n    handleCPassword = (e) => {\r\n        this.setState({\r\n            confirmPassword: e.target.value,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {inProgress, error,success, isLoggedIn} = this.props.auth;\r\n        //so that logged in user don't sees this page\r\n        if (isLoggedIn) {\r\n            return <Redirect to=\"/details\"/>;\r\n        }\r\n        return (\r\n            <div className=\"home-screen\">\r\n                <Background/>\r\n                <div className=\"register-form\">\r\n                    <div className=\"headerss\">\r\n                        <p>Sign Up</p><br></br><br></br>\r\n                    </div>\r\n\r\n                    <div className=\"form-fields\">\r\n                        {error && <div className=\"alert-warn\">\r\n                            <button>{error}</button>\r\n                        </div>}\r\n                        {success && <div className=\"alert-done\">\r\n                            <button>{success}</button>\r\n                        </div>}\r\n                        <input type=\"text\" placeholder=\"First Name\" required onChange={this.handleFName}/>\r\n                        <input type=\"text\" placeholder=\"Last Name\" required onChange={this.handleLName}/>\r\n                        <input type=\"text\" placeholder=\"Username\" required onChange={this.handleName}/>\r\n                        <input type=\"email\" placeholder=\"Email\" required onChange={this.handleEmail}/>\r\n                        <input type=\"password\" placeholder=\"Password\" required onChange={this.handlePassword}/>\r\n                        <input type=\"password\" placeholder=\"Confirm Password\" required onChange={this.handleCPassword}/>\r\n                        <button onClick={this.handleSubmitForm} disabled={inProgress}>Sign Up</button>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.auth,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(SignUp);\r\n","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {logoutUser} from \"../actions/auth\";\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nclass Navbar extends Component {\r\n    logout = () => {\r\n        localStorage.removeItem(\"DONNA\");\r\n        this.props.dispatch(logoutUser());\r\n    };\r\n\r\n    render() {\r\n        const {auth} = this.props;\r\n        return (\r\n            <div className=\"navbar\">\r\n                <div className=\"nav-left\">\r\n                <Typography type=\"title\">\r\n                    <Link to=\"/\">DONNA</Link>\r\n                </Typography>\r\n                </div>\r\n                <div id=\"google_translate_element\"></div>\r\n                <div className=\"nav-right\">\r\n                    {!auth.isLoggedIn && (<Button variant=\"contained\" color=\"primary\" ><Link to=\"/login\">Login</Link></Button>)}\r\n                    {auth.isLoggedIn && (<button className=\"bttn-home\"> <Link to=\"/profile\">{auth.user.username} </Link></button>)}\r\n                    &nbsp\r\n                    {!auth.isLoggedIn && (<Button variant=\"contained\" color=\"primary\" ><Link to=\"/sign-up\">Sign Up</Link></Button>)}\r\n                    {auth.isLoggedIn && (<Button variant=\"contained\" color=\"primary\" onClick={this.logout}>Log Out</Button>)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.auth,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n//actions\r\nimport {login, clearAuth} from \"../actions/auth\";\r\n//components\r\nimport Background from './Background';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n        };\r\n    }\r\n\r\n    //to clear the error if it comes on reload or whenever the user shifts from this page\r\n    componentWillUnmount() {\r\n        this.props.dispatch(clearAuth());\r\n    }\r\n    //handle submit button\r\n    handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        const {email, password} = this.state;\r\n        if (email && password) {\r\n            this.props.dispatch(login(email, password));\r\n        }\r\n    };\r\n    //handle input fields\r\n    handleEmail = (e) => {\r\n        this.setState({\r\n            email: e.target.value,\r\n        });\r\n    };\r\n    handlePassword = (e) => {\r\n        this.setState({\r\n            password: e.target.value,\r\n        });\r\n    };\r\n    render() {\r\n        const {inProgress, error, isLoggedIn,success} = this.props.auth;\r\n\r\n        //so that logged in user don't sees the login page\r\n        if (isLoggedIn) {\r\n            return <Redirect to=\"/details\"/>;\r\n        }\r\n        return (\r\n            <div className=\"home-screen\">\r\n                <Background/>\r\n                <div className=\"login-form\">\r\n                    <div className=\"headerss\">\r\n                        <p>Log In</p><br></br><br></br>\r\n                    </div>\r\n\r\n                    <div className=\"form-fields\">\r\n                        {error && (\r\n                            <div className=\"alert-warn\">\r\n                                <button>{error}</button>\r\n                            </div>\r\n                        )}\r\n                        {success && (\r\n                            <div className=\"alert-done\">\r\n                                <button>{success}</button>\r\n                            </div>\r\n                        )}\r\n                        <TextField id=\"standard-basic\" placeholder=\"Username\" fullWidth={true} required onChange={this.handleEmail}/>\r\n                        <TextField id=\"filled-basic\" type=\"password\" placeholder=\"Password\" fullWidth={true} required onChange={this.handlePassword}/>\r\n                        <Button variant=\"contained\" onClick={this.handleSubmitForm} disabled={inProgress}>Submit</Button>\r\n                        <br></br><br></br>\r\n                        <p className=\"Forgot\"> OR</p><br></br>\r\n                        <p className=\"Forgot\"><Link to=\"/forgot\">Forgot Password?</Link> | <Link to=\"/sign-up\">New\r\n                            User</Link></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.auth,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Login);\r\n","import React, {Component} from 'react';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"footer\">\r\n                <p>GPL-3.0 License  &nbsp;&nbsp;Group-18</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;\r\n","import React, {Component} from 'react';\r\n//components\r\nimport Background from './Background';\r\n\r\n\r\nclass Page404 extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Background/>\r\n                Sorry!!!! Page Not Found!!!\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Page404;\r\n","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n//actions\r\nimport {forgot, clearAuth} from \"../actions/auth\";\r\n//components\r\nimport Background from './Background';\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: ''\r\n        };\r\n    }\r\n\r\n    //to clear the error if it comes on reload or whenever the user shifts from this page\r\n    componentWillUnmount() {\r\n        this.props.dispatch(clearAuth());\r\n    }\r\n\r\n\r\n    //handle submit button\r\n    handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        const {email} = this.state;\r\n        if (email) {\r\n            this.props.dispatch(forgot(email));\r\n        }\r\n    };\r\n    //handle input field\r\n    handleEmail = (e) => {\r\n        this.setState({\r\n            email: e.target.value,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {inProgress, success,error, isLoggedIn} = this.props.auth;\r\n\r\n        //so that logged in user don't sees the Forgot Password page even if he tries to manupalate url \r\n        if (isLoggedIn) {\r\n            return <Redirect to=\"/details\"/>;\r\n        }\r\n        return (\r\n            <div className=\"home-screen\">\r\n                <Background/>\r\n                <div className=\"forgot-form\"><br></br><br></br>\r\n                    <h5>Please Enter your Registered Email ID</h5><br></br><br></br>\r\n\r\n                    <div className=\"form-fields\">\r\n                        {error && <div className=\"alert-warn\">\r\n                            <button>{error}</button>\r\n                        </div>}\r\n                        {success && <div className=\"alert-done\">\r\n                            <button>{success}</button>\r\n                        </div>}\r\n                        <br></br>\r\n                        <input type=\"email\" placeholder=\"Email\" required onChange={this.handleEmail}/>\r\n                        <button onClick={this.handleSubmitForm} disabled={inProgress}>Submit</button><br></br><br></br>\r\n                        <p className=\"Forgot\"> OR</p><br></br>\r\n                        <p className=\"Forgot\"><Link to=\"/login\">Login</Link> | <Link to=\"/sign-up\">New User</Link></p>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.auth,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Login);\r\n","import {\r\n    SHOW_DETAILS_PAGE,\r\n    SHOW_CHATBOT_PAGE,\r\n    SHOW_STOCK_DETAILS,\r\n    SHOW_AMAZON_DETAILS,\r\n    VIEW_DETAILS,\r\n    UPDATE_BOX_SHOW,\r\n    UPDATE_SUCCESS_TRANSACTION,\r\n    UPDATE_FAILURE_TRANSACTION,\r\n    TRANSACTION_START,\r\n    TRANSACTION_SUCCESS,\r\n    TRANSACTION_FAILURE,\r\n    CLEAR_AUTH_STATE,\r\n    FETCH_TRANSACTIONS,\r\n    FETCH_TRANSACTION_START,\r\n    DELETE_SUCCESS_TRANSACTION,\r\n    DELETE_FAILURE_TRANSACTION,\r\n    ADD_CHAT_MESSAGE,\r\n    DISPLAY_CHAT_MESSAGE,\r\n    SHOW_WISHLIST,\r\n    SHOW_STOCKLIST,\r\n    FETCH_DETAILS,\r\n    SHOW_BARGRAPH,\r\n    SHOW_PIECHART,\r\n    HIDE_GRAPH,\r\n    SHOW_LINECHART,\r\n    AVG_FETCH_DETAILS\r\n} from './actionTypes';\r\n\r\n//show details page to user\r\nexport function showDetails()\r\n{\r\n    return{\r\n        type:SHOW_DETAILS_PAGE,\r\n    }\r\n}\r\n//show chat bot page to user\r\nexport function showChatBot()\r\n{\r\n    return{\r\n        type:SHOW_CHATBOT_PAGE,\r\n    }\r\n}\r\n//show the past transactions to user\r\nexport function viewdetails()\r\n{\r\n    return{\r\n        type:VIEW_DETAILS,\r\n    }\r\n}\r\n\r\n//show stock details\r\nexport function showStockDetails()\r\n{\r\n    return{\r\n        type:SHOW_STOCK_DETAILS,\r\n    }\r\n}\r\n//show amazon details\r\nexport function showAmazonDetails()\r\n{\r\n    return{\r\n        type:SHOW_AMAZON_DETAILS,\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n//Form Body\r\n//converting data in format variable1=key1&variable2=key2...\r\n//this needs to be checked with django api if this format not accepted then send json object\r\nfunction getFormBody(params) {\r\n    let FormBody = [];\r\n    for (let property in params) {\r\n        let encodedKey = encodeURIComponent(property);\r\n        let encodedValue = encodeURIComponent(params[property]);\r\n        FormBody.push(encodedKey + '=' + encodedValue);\r\n    }\r\n    return FormBody.join('&');\r\n}\r\n\r\n//disable add transaction button to prevent multiple request by user\r\nexport function startTransaction() {\r\n    return {\r\n        type: TRANSACTION_START,\r\n        \r\n    };\r\n}\r\n//transaction failed msg\r\nexport function transactionFailed(errormsg) {\r\n    return {\r\n        type: TRANSACTION_FAILURE,\r\n        error: errormsg,\r\n    };\r\n}\r\n//transaction success msg\r\nexport function transactionSuccess(successmsg) {\r\n    return {\r\n        type: TRANSACTION_SUCCESS,\r\n        success:successmsg,\r\n    };\r\n}\r\n\r\n//add transaction api called\r\nexport function addTransaction(category,credit,description,amount) {\r\n    return (dispatch) => {\r\n        var success =  false;\r\n        dispatch(startTransaction());\r\n        const url = '/create_transaction';\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                Authorization:`Bearer ${localStorage.getItem('DONNA')}`\r\n            },\r\n            body: getFormBody({\r\n                amount,\r\n                category,\r\n                description,\r\n                credit\r\n                }),\r\n        })\r\n            .then((response) => \r\n            {\r\n                if(response.status === 201){\r\n                success=true;\r\n                return response.json();     \r\n            }else{\r\n                return response.json();\r\n            }})\r\n            .then((data) => {\r\n                \r\n                if (success) {\r\n                    dispatch(transactionSuccess(\"Transaction Added Successfully\"));\r\n                    dispatch(fetchStocklist());\r\n                    return;\r\n                }\r\n                else{\r\n                    dispatch(transactionFailed(\"Transaction Could not be Added\"));\r\n                }\r\n                \r\n            });\r\n    };\r\n}\r\n//msgs cleared on unmounting of the component\r\nexport function clearAuth() {\r\n    return {\r\n        type: CLEAR_AUTH_STATE,\r\n    };\r\n}\r\n\r\n//fetch transactions\r\nexport function startFetchTransaction() {\r\n    return {\r\n        type: FETCH_TRANSACTION_START,\r\n        \r\n    };\r\n}\r\nexport function fetchedTransactions(transactions){\r\n    return {\r\n        type : FETCH_TRANSACTIONS,\r\n        transactions\r\n    }\r\n\r\n}\r\n//past transactions api called\r\nexport function fetchTransactions(){\r\n\r\n    return (dispatch) => {\r\n        var success =  false;\r\n        dispatch(startFetchTransaction());\r\n        const url = '/transactions';\r\n        \r\n        fetch(url, {\r\n            headers : {\r\n                Authorization : `Bearer ${localStorage.getItem('DONNA')}`\r\n            }\r\n        })\r\n            .then((response) => \r\n            {\r\n                if(response.status === 200){\r\n                success=true;\r\n                return response.json();     \r\n            }else{\r\n                return response.json();\r\n            }})\r\n            .then((data) => {\r\n                if (success) {\r\n                    dispatch(fetchedTransactions(data.reverse()));\r\n                    return;\r\n                }\r\n                else{\r\n                    return;\r\n                }\r\n                \r\n            });\r\n    };\r\n\r\n\r\n}\r\n\r\n//update transaction\r\n//show update transaction box when user clicks on update\r\nexport function showUpdateBox(id)\r\n{\r\n    return {\r\n        type:UPDATE_BOX_SHOW,\r\n        id\r\n    };\r\n}\r\n//update success msg\r\nexport function updateTransactionSuccess(msg)\r\n{\r\n    return {\r\n        type:UPDATE_SUCCESS_TRANSACTION,\r\n        success:msg\r\n    };\r\n}\r\n//update failed msg\r\nexport function updateTransactionFailure(msg)\r\n{\r\n    return {\r\n        type:UPDATE_FAILURE_TRANSACTION,\r\n        error:msg\r\n    };\r\n}\r\n\r\n//update request sent to backend\r\nexport function updateTransaction(category,credit,description,amount,id){\r\n    return (dispatch) => {\r\n        var success =  false;\r\n        const url =`/update_transaction/${id}/`;\r\n        fetch(url, {\r\n            method: 'PATCH',\r\n            headers : {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                Authorization : `Bearer ${localStorage.getItem('DONNA')}`\r\n            },\r\n            body: getFormBody({\r\n                amount,\r\n                category,\r\n                description,\r\n                credit\r\n                }),\r\n        })\r\n            .then((response) => \r\n            {\r\n                if(response.status === 200){\r\n                success=true;\r\n                return response.json();     \r\n            }else{\r\n                return response.json();\r\n            }})\r\n            .then((data) => {\r\n                if (success) {\r\n                    dispatch(updateTransactionSuccess(\"Transaction updated successfully\"));\r\n                    dispatch(fetchTransactions());\r\n                    dispatch(fetchDetails());\r\n                    return;\r\n                }\r\n                else{\r\n                    dispatch(updateTransactionFailure(\"Transaction was not able to update\"));\r\n                    return;\r\n                }\r\n                \r\n            });\r\n    };\r\n\r\n\r\n}\r\n\r\n\r\n//delete transaction\r\n\r\n//delete success msg\r\nexport function deleteSuccess(msg)\r\n{\r\n    return {\r\n        type:DELETE_SUCCESS_TRANSACTION,\r\n        success:msg\r\n    };\r\n}\r\n//delete failed msg\r\nexport function deleteFailure(msg)\r\n{\r\n    return {\r\n        type:DELETE_FAILURE_TRANSACTION,\r\n        error:msg\r\n    };\r\n}\r\n//delete request sent to backend\r\nexport function deleteTransaction(id){\r\n    return (dispatch) => {\r\n        const url =`/delete_transaction/${id}/`;\r\n        var success = false;\r\n        fetch(url, {\r\n            method: 'DELETE',\r\n            headers : {\r\n                Authorization : `Bearer ${localStorage.getItem('DONNA')}`\r\n            }\r\n        })\r\n        .then((response) => \r\n        {\r\n            if(response.status === 204){\r\n                success=true;\r\n                return response.json();\r\n            }\r\n            else\r\n            {\r\n                return response.json();\r\n            }\r\n        })\r\n        .then(() => {\r\n                if (success) {\r\n                    dispatch(deleteSuccess(\"Transaction deleted successfully\"));\r\n                    dispatch(fetchTransactions());\r\n                    dispatch(fetchDetails());\r\n                    return;\r\n                }\r\n                else{\r\n                    dispatch(deleteFailure(\"Transaction was not able to delete\"));\r\n                    return;\r\n                }\r\n                \r\n        }).catch(()=>{\r\n            if (success) {\r\n                dispatch(deleteSuccess(\"Transaction deleted successfully\"));\r\n                dispatch(fetchTransactions());\r\n                dispatch(fetchDetails());\r\n                return;\r\n            }\r\n            else{\r\n                dispatch(deleteFailure(\"Transaction was not able to delete\"));\r\n                return;\r\n            }});\r\n    };\r\n\r\n\r\n}\r\n\r\n\r\n\r\n//chat bot\r\n//add new msg to chat box\r\nexport function addChatMessage(msg)\r\n{\r\n    return {\r\n        type:ADD_CHAT_MESSAGE,\r\n        chatMsg:msg\r\n    };\r\n}\r\n//display past chat msgs\r\nexport function displayChatMessage(msg)\r\n{\r\n    return {\r\n        type:DISPLAY_CHAT_MESSAGE,\r\n        chatMsg:msg\r\n    };\r\n}\r\n//sent the user msg to backend\r\nexport function newMessage(typedMessage,self)\r\n{\r\n    return (dispatch) => {\r\n        var success =  false;\r\n        const url = '/external/';\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                Authorization:`Bearer ${localStorage.getItem('DONNA')}`\r\n            },\r\n            body: getFormBody({\r\n                content:typedMessage,\r\n                self\r\n                }),\r\n        })\r\n            .then((response) => \r\n            {\r\n                if(response.status === 200){\r\n                success=true;\r\n                return response.json();     \r\n            }else{\r\n                return response.json();\r\n            }})\r\n            .then((data) => {\r\n                // console.log(data);\r\n                \r\n                if (success) {\r\n                    dispatch(addChatMessage(data));\r\n                    let speak_button=document.getElementsByTagName(\"button\")[7];\r\n                    speak_button.setAttribute(\"text\",data.content);\r\n                    speak_button.click();\r\n                    return;\r\n                }\r\n                else{\r\n                    return;\r\n                }\r\n                \r\n            });\r\n    };\r\n\r\n}\r\n\r\n//fetch past msgs from backend\r\nexport function pastMessages()\r\n{\r\n    return (dispatch) => {\r\n        var success =  false;\r\n        const url = '/old/';\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                Authorization:`Bearer ${localStorage.getItem('DONNA')}`\r\n            },\r\n            body: getFormBody({\r\n                results:100,\r\n                \r\n                }),\r\n        })\r\n            .then((response) => \r\n            {\r\n                if(response.status === 200){\r\n                success=true;\r\n                return response.json();     \r\n            }else{\r\n                return response.json();\r\n            }})\r\n            .then((data) => {\r\n                if (success) {\r\n                    dispatch(displayChatMessage(data));\r\n                    return;\r\n                }\r\n                else{\r\n                    return;\r\n                }\r\n                \r\n            });\r\n    };\r\n\r\n}\r\n\r\n\r\n//wishlist\r\n//show amazon wishlist to user\r\nexport function showWishlist(wishlist)\r\n{\r\n    return {\r\n        type:SHOW_WISHLIST,\r\n        wishlist\r\n    };\r\n}\r\n\r\n//fetch user amazon wishlist from backend\r\nexport function fetchWishlist(){\r\n\r\n    return (dispatch) => {\r\n        var success =  false;\r\n        const url = '/wishlist/';\r\n        \r\n        fetch(url, {\r\n            headers : {\r\n                Authorization : `Bearer ${localStorage.getItem('DONNA')}`\r\n            }\r\n        })\r\n            .then((response) => \r\n            {\r\n                if(response.status === 200){\r\n                success=true;\r\n                return response.json();     \r\n            }else{\r\n                return response.json();\r\n            }})\r\n            .then((data) => {\r\n                if (success) {\r\n                    dispatch(showWishlist(data));\r\n                    return;\r\n                }\r\n                else{\r\n                    return;\r\n                }\r\n                \r\n            });\r\n    };\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n//stocklist\r\n//show stocks list to user\r\nexport function showStocklist(stocklist)\r\n{\r\n    return {\r\n        type:SHOW_STOCKLIST,\r\n        stocklist\r\n    };\r\n}\r\n\r\n//fetch stocks list for user from backend\r\nexport function fetchStocklist(){\r\n\r\n    return (dispatch) => {\r\n        var success =  false;\r\n        const url = '/stock_list/';\r\n        \r\n        fetch(url, {\r\n            headers : {\r\n                Authorization : `Bearer ${localStorage.getItem('DONNA')}`\r\n            }\r\n        })\r\n            .then((response) => \r\n            {\r\n                if(response.status === 200){\r\n                success=true;\r\n                return response.json();     \r\n            }else{\r\n                return response.json();\r\n            }})\r\n            .then((data) => {\r\n                if (success) {\r\n                    dispatch(showStocklist(data));\r\n                    return;\r\n                }\r\n                else{\r\n                    return;\r\n                }\r\n                \r\n            });\r\n    };\r\n\r\n\r\n}\r\n// details filter for visualization\r\nexport function fetchDetailsYear(year){\r\n\r\n    return (dispatch) => {\r\n        var success =  false;\r\n        const url = `/details/year/${year}/`;\r\n        \r\n        fetch(url, {\r\n            headers : {\r\n                Authorization : `Bearer ${localStorage.getItem('DONNA')}`\r\n            }\r\n        })\r\n            .then((response) => \r\n            {\r\n                if(response.status === 200){\r\n                success=true;\r\n                return response.json();     \r\n            }else{\r\n                return response.json();\r\n            }})\r\n            .then((data) => {\r\n                if (success) {\r\n                    dispatch(fetchedDetails(data));\r\n                    return;\r\n                }\r\n                else{\r\n                    return;\r\n                }\r\n                \r\n            });\r\n    };\r\n\r\n\r\n}\r\n//month filter applied\r\nexport function fetchDetailsMonth(month){\r\n\r\n    return (dispatch) => {\r\n        var success =  false;\r\n        const url = `/details/month/${month}/`;\r\n        \r\n        fetch(url, {\r\n            headers : {\r\n                Authorization : `Bearer ${localStorage.getItem('DONNA')}`\r\n            }\r\n        })\r\n            .then((response) => \r\n            {\r\n                if(response.status === 200){\r\n                success=true;\r\n                return response.json();     \r\n            }else{\r\n                return response.json();\r\n            }})\r\n            .then((data) => {\r\n                if (success) {\r\n                    dispatch(fetchedDetails(data));\r\n                    return;\r\n                }\r\n                else{\r\n                    return;\r\n                }\r\n                \r\n            });\r\n    };\r\n\r\n\r\n}\r\n//year month filter applied\r\nexport function fetchDetailsYearMonth(year,month){\r\n\r\n    return (dispatch) => {\r\n        var success =  false;\r\n        const url = `/details/${year}/${month}/`;\r\n        \r\n        fetch(url, {\r\n            headers : {\r\n                Authorization : `Bearer ${localStorage.getItem('DONNA')}`\r\n            }\r\n        })\r\n            .then((response) => \r\n            {\r\n                if(response.status === 200){\r\n                success=true;\r\n                return response.json();     \r\n            }else{\r\n                return response.json();\r\n            }})\r\n            .then((data) => {\r\n                if (success) {\r\n                    dispatch(fetchedDetails(data));\r\n                    return;\r\n                }\r\n                else{\r\n                    return;\r\n                }\r\n                \r\n            });\r\n    };\r\n\r\n\r\n}\r\n\r\n// filter transactions\r\n//date month year filter applied\r\nexport function filterTransaction1(date,month,year){\r\n    return (dispatch) => {\r\n        var success =  false;\r\n        dispatch(fetchDetailsYearMonth(year,month));\r\n        const url =`/transactions/${year}/${month}/${date}/`;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers : {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                Authorization : `Bearer ${localStorage.getItem('DONNA')}`\r\n            },\r\n            \r\n        })\r\n            .then((response) => \r\n            {\r\n                if(response.status === 200){\r\n                success=true;\r\n                return response.json();     \r\n            }else{\r\n                return response.json();\r\n            }})\r\n            .then((data) => {\r\n                if (success) {\r\n                    dispatch(updateTransactionSuccess(\"Filters applied successfully\"));\r\n                    dispatch(fetchedTransactions(data.reverse()));\r\n                    return;\r\n                }\r\n                else{\r\n                    dispatch(updateTransactionFailure(\"Please select appropriate Filters\"));\r\n                    return;\r\n                }\r\n                \r\n            });\r\n    };\r\n\r\n\r\n}\r\n//date month filter applied\r\nexport function filterTransaction2(date,month){\r\n    return (dispatch) => {\r\n        var success =  false;\r\n        dispatch(fetchDetailsMonth(month));\r\n        const url =`/transactions/month/date/${month}/${date}/`;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers : {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                Authorization : `Bearer ${localStorage.getItem('DONNA')}`\r\n            },\r\n            \r\n        })\r\n            .then((response) => \r\n            {\r\n                if(response.status === 200){\r\n                success=true;\r\n                return response.json();     \r\n            }else{\r\n                return response.json();\r\n            }})\r\n            .then((data) => {\r\n                if (success) {\r\n                    dispatch(updateTransactionSuccess(\"Filters applied successfully\"));\r\n                    dispatch(fetchedTransactions(data.reverse()));\r\n                    return;\r\n                }\r\n                else{\r\n                    dispatch(updateTransactionFailure(\"Please select appropriate Filters\"));\r\n                    return;\r\n                }\r\n                \r\n            });\r\n    };\r\n\r\n\r\n}\r\n//date year filter applied\r\nexport function filterTransaction3(date,year){\r\n    return (dispatch) => {\r\n        var success =  false;\r\n        dispatch(fetchDetailsYear(year));\r\n        const url =`/transactions/year/date/${year}/${date}/`;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers : {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                Authorization : `Bearer ${localStorage.getItem('DONNA')}`\r\n            },\r\n            \r\n        })\r\n            .then((response) => \r\n            {\r\n                if(response.status === 200){\r\n                success=true;\r\n                return response.json();     \r\n            }else{\r\n                return response.json();\r\n            }})\r\n            .then((data) => {\r\n                if (success) {\r\n                    dispatch(updateTransactionSuccess(\"Filters applied successfully\"));\r\n                    dispatch(fetchedTransactions(data.reverse()));\r\n                    return;\r\n                }\r\n                else{\r\n                    dispatch(updateTransactionFailure(\"Please select appropriate Filters\"));\r\n                    return;\r\n                }\r\n                \r\n            });\r\n    };\r\n\r\n\r\n}\r\n\r\n//month year filter applied\r\nexport function filterTransaction4(month,year){\r\n    return (dispatch) => {\r\n        var success =  false;\r\n        dispatch(fetchDetailsYearMonth(year,month));\r\n        const url =`/transactions/year/month/${year}/${month}/`;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers : {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                Authorization : `Bearer ${localStorage.getItem('DONNA')}`\r\n            },\r\n            \r\n        })\r\n            .then((response) => \r\n            {\r\n                if(response.status === 200){\r\n                success=true;\r\n                return response.json();     \r\n            }else{\r\n                return response.json();\r\n            }})\r\n            .then((data) => {\r\n                if (success) {\r\n                    dispatch(updateTransactionSuccess(\"Filters applied successfully\"));\r\n                    dispatch(fetchedTransactions(data.reverse()));\r\n                    return;\r\n                }\r\n                else{\r\n                    dispatch(updateTransactionFailure(\"Please select appropriate Filters\"));\r\n                    return;\r\n                }\r\n                \r\n            });\r\n    };\r\n\r\n\r\n}\r\n//date filter applied\r\nexport function filterTransaction5(date){\r\n    return (dispatch) => {\r\n        var success =  false;\r\n        const url =`/transactions/date/${date}/`;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers : {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                Authorization : `Bearer ${localStorage.getItem('DONNA')}`\r\n            },\r\n            \r\n        })\r\n            .then((response) => \r\n            {\r\n                if(response.status === 200){\r\n                success=true;\r\n                return response.json();     \r\n            }else{\r\n                return response.json();\r\n            }})\r\n            .then((data) => {\r\n                if (success) {\r\n                    dispatch(updateTransactionSuccess(\"Filters applied successfully\"));\r\n                    dispatch(fetchedTransactions(data.reverse()));\r\n                    return;\r\n                }\r\n                else{\r\n                    dispatch(updateTransactionFailure(\"Please select appropriate Filters\"));\r\n                    return;\r\n                }\r\n                \r\n            });\r\n    };\r\n\r\n\r\n}\r\n\r\n//month filter applied\r\nexport function filterTransaction6(month){\r\n    return (dispatch) => {\r\n        var success =  false;\r\n        dispatch(fetchDetailsMonth(month));\r\n        const url =`/transactions/month/${month}/`;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers : {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                Authorization : `Bearer ${localStorage.getItem('DONNA')}`\r\n            },\r\n            \r\n        })\r\n            .then((response) => \r\n            {\r\n                if(response.status === 200){\r\n                success=true;\r\n                return response.json();     \r\n            }else{\r\n                return response.json();\r\n            }})\r\n            .then((data) => {\r\n                if (success) {\r\n                    dispatch(updateTransactionSuccess(\"Filters applied successfully\"));\r\n                    dispatch(fetchedTransactions(data.reverse()));\r\n                    return;\r\n                }\r\n                else{\r\n                    dispatch(updateTransactionFailure(\"Please select appropriate Filters\"));\r\n                    return;\r\n                }\r\n                \r\n            });\r\n    };\r\n\r\n\r\n}\r\n\r\n//year filter applied\r\nexport function filterTransaction7(year){\r\n    return (dispatch) => {\r\n        var success =  false;\r\n        dispatch(fetchDetailsYear(year));\r\n        const url =`/transactions/year/${year}/`;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers : {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                Authorization : `Bearer ${localStorage.getItem('DONNA')}`\r\n            },\r\n            \r\n        })\r\n            .then((response) => \r\n            {\r\n                if(response.status === 200){\r\n                success=true;\r\n                return response.json();     \r\n            }else{\r\n                return response.json();\r\n            }})\r\n            .then((data) => {\r\n                if (success) {\r\n                    dispatch(updateTransactionSuccess(\"Filters applied successfully\"));\r\n                    dispatch(fetchedTransactions(data.reverse()));\r\n                    return;\r\n                }\r\n                else{\r\n                    dispatch(updateTransactionFailure(\"Please select appropriate Filters\"));\r\n                    return;\r\n                }\r\n                \r\n            });\r\n    };\r\n\r\n\r\n}\r\n\r\n\r\n// fetch details\r\nexport function fetchedDetails(details){\r\n    return {\r\n        type : FETCH_DETAILS,\r\n        details\r\n    }\r\n\r\n}\r\n//fetch details for visualization\r\nexport function fetchDetails(){\r\n\r\n    return (dispatch) => {\r\n        var success =  false;\r\n        const url = '/detailslist';\r\n        \r\n        fetch(url, {\r\n            headers : {\r\n                Authorization : `Bearer ${localStorage.getItem('DONNA')}`\r\n            }\r\n        })\r\n            .then((response) => \r\n            {\r\n                if(response.status === 200){\r\n                success=true;\r\n                return response.json();     \r\n            }else{\r\n                return response.json();\r\n            }})\r\n            .then((data) => {\r\n                if (success) {\r\n                    dispatch(fetchedDetails(data));\r\n                    return;\r\n                }\r\n                else{\r\n                    return;\r\n                }\r\n                \r\n            });\r\n    };\r\n\r\n\r\n}\r\n\r\n\r\n// show graphs\r\nexport function showBarGraph(){\r\n    return {\r\n        type : SHOW_BARGRAPH\r\n    }\r\n\r\n}\r\nexport function showPieChart(){\r\n    return {\r\n        type : SHOW_PIECHART\r\n    }\r\n\r\n}\r\nexport function showLineChart(){\r\n    return {\r\n        type : SHOW_LINECHART\r\n    }\r\n\r\n}\r\nexport function hideGraph(){\r\n    return {\r\n        type:HIDE_GRAPH\r\n    }\r\n}\r\n\r\n\r\n\r\n// fetched avg filter details\r\nexport function fetchedAvgDetails(details_week,details_month){\r\n    return {\r\n        type : AVG_FETCH_DETAILS,\r\n        week:details_week,\r\n        month:details_month\r\n    }\r\n\r\n}\r\n//average filter\r\nexport function avgFilter(start,end){\r\n\r\n    return (dispatch) => {\r\n        var success =  false;\r\n        const url = `/transactions/average/${start[2]}/${start[1]}/${start[0]}/${end[2]}/${end[1]}/${end[0]}/`;\r\n        \r\n        fetch(url, {\r\n            headers : {\r\n                Authorization : `Bearer ${localStorage.getItem('DONNA')}`\r\n            }\r\n        })\r\n            .then((response) => \r\n            {\r\n                if(response.status === 200){\r\n                success=true;\r\n                return response.json();     \r\n            }else{\r\n                return response.json();\r\n            }})\r\n            .then((data) => {\r\n                if (success) {\r\n                    dispatch(fetchedAvgDetails(data[0],data[1]));\r\n                    return;\r\n                }\r\n                else{\r\n                    return;\r\n                }\r\n                \r\n            });\r\n    };\r\n\r\n\r\n}","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n//actions\r\nimport {addTransaction, clearAuth} from \"../actions/pages\";\r\n\r\n\r\nclass DetailsPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            category: '0',\r\n            amount: '',\r\n            type: 'true',\r\n            description: '',\r\n            dummy: null,\r\n            type2:'false'\r\n        };\r\n    }\r\n    //functions to handle different input fields\r\n    handleChange = (event) => {\r\n        this.setState({category: event.target.value});\r\n    }\r\n    handleChange2 = (event) => {\r\n        this.setState({amount: event.target.value});\r\n    }\r\n    handleChange3 = (event) => {\r\n        this.setState({type: event.target.value});\r\n    }\r\n    handleChange4 = (event) => {\r\n        this.setState({description: event.target.value});\r\n    }\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        //call dispatch\r\n        e.preventDefault();\r\n        var {category, type, description, amount} = this.state;\r\n        if(category!=='0' && category !== '6')\r\n        {\r\n            type = this.state.type2;\r\n        }\r\n        this.props.dispatch(addTransaction(category, type, description, amount));\r\n        //to clear the dispayed msgs\r\n        setTimeout(() => {\r\n            this.props.dispatch(clearAuth());\r\n        }, 10000);\r\n\r\n        this.setState({\r\n            category: '0',\r\n            amount: '',\r\n            type: 'true',\r\n            description: '',\r\n            dummy: null,\r\n            type2:'false'\r\n        });\r\n\r\n    }\r\n    //clear msgs when the component unmounts\r\n    componentWillUnmount() {\r\n        this.props.dispatch(clearAuth());\r\n    }\r\n\r\n    render() {\r\n        const {success, error, inProgress} = this.props.details;\r\n        const {isLoggedIn} = this.props.auth;\r\n        //so that only logged in user sees this page\r\n        if (!isLoggedIn) {\r\n            return <Redirect to=\"/login\"/>;\r\n        }\r\n        return (\r\n            <div className=\"form-box\">\r\n                <h2>ADD DETAILS</h2><br/>\r\n                {error && (\r\n                    <div className=\"alert-warn\">\r\n                        <button>{error}</button>\r\n                    </div>\r\n                )}\r\n                {success && (\r\n                    <div className=\"alert-done\">\r\n                        <button>{success}</button>\r\n                    </div>\r\n                )}\r\n                <div>\r\n                    <label>Choose Category</label>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <select onChange={this.handleChange} value={this.state.category} placeholder=\"Category\">\r\n                        <option value=\"0\">Income</option>\r\n                        <option value=\"1\">Housing</option>\r\n                        <option value=\"2\">Food</option>\r\n                        <option value=\"3\">Healthcare</option>\r\n                        <option value=\"4\">Transportation</option>\r\n                        <option value=\"5\">Recreation</option>\r\n                        <option value=\"6\">Other</option>\r\n                    </select>\r\n                </div>\r\n                <br/>\r\n                <div>\r\n                    <label>Description</label>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <input type=\"text\" onChange={this.handleChange4} value={this.state.description}\r\n                           placeholder=\"Description\" required/>\r\n                </div>\r\n                <br/>\r\n\r\n                <div>\r\n                    <label>Enter Amount </label>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <input type=\"text\" onChange={this.handleChange2} value={this.state.amount} placeholder=\"00.00\"\r\n                           required/>\r\n                </div>\r\n                <br/>\r\n                <div>\r\n                    <label>Type</label>\r\n                    &nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;\r\n                    &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    {this.state.category === '6' && (\r\n                    <select onChange={this.handleChange3} value={this.state.type} placeholder=\"Type\">\r\n                        <option value=\"true\">Credit</option>\r\n                        <option value=\"false\">Debit</option>\r\n                    </select>)\r\n                    }\r\n                    {this.state.category === '0' && (\r\n                    <select onChange={this.handleChange3} value={this.state.type} placeholder=\"Type\">\r\n                        <option value=\"true\">Credit</option>\r\n                        <option value=\"false\" disabled>Debit</option>\r\n                    </select>)\r\n                    }\r\n                    {(this.state.category !== '6' && this.state.category !== '0' ) && (\r\n                    <select onChange={this.handleChange3} value={this.state.type2} placeholder=\"Type\">\r\n                        <option value=\"false\">Debit</option>\r\n                        <option value=\"true\" disabled>Credit</option>   \r\n                    </select>)\r\n                    }\r\n                    \r\n                </div>\r\n                <br/><br/>\r\n                <button className=\"add\" onClick={this.handleSubmit} disabled={inProgress}>ADD</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.auth,\r\n        details: state.details,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(DetailsPage);\r\n","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nclass ChatMessage extends Component {\r\n\r\n\r\n    render() {\r\n        const {message} = this.props;\r\n        return (\r\n            // to give different colors to msgs sent by user and chatbot\r\n            <div\r\n                className={\r\n                    message.self\r\n                        ? 'chat-bubble self-chat'\r\n                        : 'chat-bubble other-chat'\r\n                }\r\n            >\r\n                {message.content}\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.auth,\r\n        details: state.details,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ChatMessage);\r\n","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\n//actions\r\nimport {addChatMessage, newMessage, pastMessages} from \"../actions/pages\";\r\n//components\r\nimport ChatMessage from './ChatMessage';\r\n//react-say to convert text to speech\r\nimport {SayButton} from 'react-say';\r\n\r\nclass ChatBotPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //state\r\n        this.state = {\r\n            typedMessage: \"\",\r\n        };\r\n    }\r\n\r\n    //fetch past messages from the chatbot\r\n    componentDidMount() {\r\n        this.props.dispatch(pastMessages());\r\n\r\n    }\r\n    //input chat field\r\n    handleChange = (event) => {\r\n        this.setState({typedMessage: event.target.value});\r\n    }\r\n\r\n    //send the message to the chatbot\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {typedMessage} = this.state;\r\n        if (typedMessage) {\r\n            //self true indicates message sent by user\r\n            var new_message = {content: typedMessage, self: true};\r\n            this.props.dispatch(addChatMessage(new_message));\r\n            var self = true;\r\n            this.props.dispatch(newMessage(typedMessage, self));\r\n        }\r\n        this.setState({\r\n            typedMessage: \"\",\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {messages} = this.props.details;\r\n        let text_to_be_spoken = \"\";\r\n        if (messages[messages.length - 1]) {\r\n            text_to_be_spoken = messages[messages.length - 1].content;\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"chat-container\">\r\n                <div className=\"chat-messages\">\r\n                    {messages.map((message, index) => (\r\n                        <ChatMessage message={message} key={`message.content-${index}`}/>))}\r\n                </div>\r\n                <div className=\"chat-footer\">\r\n                    <input\r\n                        type=\"text\"\r\n                        onChange={this.handleChange}\r\n                        placeholder=\"Type your Message here......\"\r\n                        value={this.state.typedMessage}\r\n\r\n                    />\r\n                    {/* to convert text to speech */}\r\n                    <SayButton text={text_to_be_spoken}/>\r\n                    <button onClick={this.handleSubmit}>\r\n                        Submit\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.auth,\r\n        details: state.details,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ChatBotPage);\r\n","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport ReactTooltip from 'react-tooltip';\r\n//actions\r\nimport {clearAuth, deleteTransaction, showUpdateBox} from \"../actions/pages\";\r\n\r\nclass TransactionEntry extends Component {\r\n    //handle update and delete buttons\r\n    handleUpdate = (id) => {\r\n        this.props.dispatch(showUpdateBox(id));\r\n    }\r\n    handleDelete = (id) => {\r\n        this.props.dispatch(deleteTransaction(id));\r\n        setTimeout(() => {\r\n            this.props.dispatch(clearAuth());\r\n        }, 10000);\r\n    }\r\n\r\n    render() {\r\n        const {transaction, index} = this.props;\r\n        var hide_button = false;\r\n        //transaction with category as stock cant be updated or deleted\r\n        if(transaction.category === 'Stock')\r\n        {\r\n            hide_button = true;\r\n        }\r\n        return (\r\n            <div className=\"transaction-entry\">\r\n                <div className=\"number \"> {index + 1} </div>\r\n                <ReactTooltip/>\r\n                <div className=\"category \"\r\n                     data-tip={transaction.description}>{transaction.category}</div>\r\n                <div className=\"amount\">{transaction.amount}</div>\r\n                {transaction.credit && <div className=\"type\">Credit</div>}\r\n                {!transaction.credit && <div className=\"type\">Debit</div>}\r\n                <div className=\"update \">\r\n                    <button onClick={() => this.handleUpdate(transaction.id)} disabled = {hide_button}>Update</button>\r\n                </div>\r\n                <div className=\"delete \">\r\n                    <button onClick={() => this.handleDelete(transaction.id)} disabled = {hide_button}>Delete</button>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.auth,\r\n        details: state.details,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(TransactionEntry);\r\n\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Pie} from 'react-chartjs-2';\r\n\r\n\r\n\r\nclass GraphPiechart2 extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                <Pie \r\n                    data={{\r\n                        labels:['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'],\r\n                            datasets:[{\r\n                                label:'Average Amount Spent(Rs)',\r\n                                data:[\r\n                                    this.props.monday,\r\n                                    this.props.tuesday,\r\n                                    this.props.wednesday,\r\n                                    this.props.thursday,\r\n                                    this.props.friday,\r\n                                    this.props.saturday,\r\n                                    this.props.sunday\r\n                                ],\r\n                            backgroundColor:[\r\n                                'rgba(75,99,132,0.6)',\r\n                                'rgba(54,162,235,0.6)',\r\n                                'rgba(75,192,92,0.6)',\r\n                                'rgba(15,142,56,0.6)',\r\n                                'rgba(255,206,86,0.6)',\r\n                                'rgba(75,192,192,0.6)',\r\n                                'rgba(153,102,255,0.6)',\r\n                            ],\r\n                            borderColor: 'rgba(0,0,0,1)',\r\n                        }]\r\n                    }}\r\n                    options={{\r\n                        title:{\r\n                            display:true,\r\n                            text:'Average Expenditure Pattern per Day',\r\n                            fontSize:25\r\n                        },\r\n                        legend:{\r\n                            display:true,\r\n                            position:'right'\r\n                        }\r\n                    }}\r\n            />\r\n            <br></br>\r\n            <Pie \r\n                    data={{\r\n                        labels:['January','February','March','April','May','June','July','August','September','October','November','December'],\r\n                        datasets:[{\r\n                            label:'Average Amount Spent(Rs)',\r\n                            data:[\r\n                                this.props.january,\r\n                                this.props.february,\r\n                                this.props.march,\r\n                                this.props.april,\r\n                                this.props.may,\r\n                                this.props.june,\r\n                                this.props.july,\r\n                                this.props.august,\r\n                                this.props.september,\r\n                                this.props.october,\r\n                                this.props.november,\r\n                                this.props.december\r\n                            ],\r\n                            backgroundColor:[\r\n                                'rgba(75,99,132,0.6)',\r\n                                'rgba(54,162,235,0.6)',\r\n                                'rgba(75,192,92,0.6)',\r\n                                'rgba(15,142,56,0.6)',\r\n                                'rgba(255,206,86,0.6)',\r\n                                'rgba(75,192,192,0.6)',\r\n                                'rgba(153,102,255,0.6)',\r\n                                'rgba(155,202,92,0.6)',\r\n                                'rgba(125,202,185,0.6)',\r\n                                'rgba(255,159,64,0.6)',\r\n                                'rgba(255,99,132,0.6)',\r\n                                'rgba(155,240,202,0.6)'\r\n                            ],\r\n                            borderColor: 'rgba(0,0,0,1)',\r\n                        }]\r\n                    }}\r\n                    options={{\r\n                        title:{\r\n                            display:true,\r\n                            text:'Average Expenditure Pattern per Month',\r\n                            fontSize:25\r\n                        },\r\n                        legend:{\r\n                            display:true,\r\n                            position:'right'\r\n                        }\r\n                    }}\r\n            />\r\n            <br></br>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.auth,\r\n        details: state.details,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(GraphPiechart2);","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Line} from 'react-chartjs-2';\r\n\r\n\r\n\r\nclass GraphLinechart2 extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                <Line\r\n                    data={{\r\n                            labels:['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'],\r\n                            datasets:[{\r\n                                label:'Average Amount Spent(Rs)',\r\n                                data:[\r\n                                    this.props.monday,\r\n                                    this.props.tuesday,\r\n                                    this.props.wednesday,\r\n                                    this.props.thursday,\r\n                                    this.props.friday,\r\n                                    this.props.saturday,\r\n                                    this.props.sunday\r\n                                ],\r\n                                backgroundColor:'rgba(75,192,192,1)',\r\n                                borderColor: 'rgba(0,0,0,1)',\r\n            \r\n            \r\n                            }]\r\n                        }}\r\n                    options={{\r\n                        title:{\r\n                        display:true,\r\n                        text:'Average Expenditure Pattern per Day',\r\n                        fontSize:25\r\n                        },\r\n                        legend:{\r\n                        display:true,\r\n                        position:'right'\r\n                        }\r\n                        }}\r\n                />  \r\n                <br></br>\r\n                <Line\r\n                    data={{\r\n                        labels:['January','February','March','April','May','June','July','August','September','October','November','December'],\r\n                        datasets:[{\r\n                            label:'Average Amount Spent(Rs)',\r\n                            data:[\r\n                                this.props.january,\r\n                                this.props.february,\r\n                                this.props.march,\r\n                                this.props.april,\r\n                                this.props.may,\r\n                                this.props.june,\r\n                                this.props.july,\r\n                                this.props.august,\r\n                                this.props.september,\r\n                                this.props.october,\r\n                                this.props.november,\r\n                                this.props.december\r\n                            ],\r\n                                backgroundColor:'rgba(75,192,192,1)',\r\n                                borderColor: 'rgba(0,0,0,1)',\r\n            \r\n            \r\n                            }]\r\n                        }}\r\n                    options={{\r\n                        title:{\r\n                        display:true,\r\n                        text:'Average Expenditure Pattern per Month',\r\n                        fontSize:25\r\n                        },\r\n                        legend:{\r\n                        display:true,\r\n                        position:'right'\r\n                        }\r\n                        }}\r\n                />  \r\n                <br></br>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.auth,\r\n        details: state.details,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(GraphLinechart2);","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\n\r\n\r\nclass GraphBargraph2 extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                <Bar  \r\n                    data={{\r\n                        labels:['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'],\r\n                        datasets:[{\r\n                            label:'Average Amount Spent(Rs)',\r\n                            data:[\r\n                                this.props.monday,\r\n                                this.props.tuesday,\r\n                                this.props.wednesday,\r\n                                this.props.thursday,\r\n                                this.props.friday,\r\n                                this.props.saturday,\r\n                                this.props.sunday\r\n                            ],\r\n                            backgroundColor:'rgba(75,192,192,1)',\r\n                            borderColor: 'rgba(0,0,0,1)',\r\n                        }]\r\n                    }}\r\n                    options={{\r\n                        title:{\r\n                        display:true,\r\n                        text:'Average Expenditure Pattern per Day',\r\n                        fontSize:25\r\n                        },\r\n                        legend:{\r\n                            display:true,\r\n                            position:'bottom'\r\n                        }\r\n                        }}\r\n            />\r\n            <br></br>\r\n            <Bar  \r\n                    data={{\r\n                        labels:['January','February','March','April','May','June','July','August','September','October','November','December'],\r\n                        datasets:[{\r\n                            label:'Average Amount Spent(Rs)',\r\n                            data:[\r\n                                this.props.january,\r\n                                this.props.february,\r\n                                this.props.march,\r\n                                this.props.april,\r\n                                this.props.may,\r\n                                this.props.june,\r\n                                this.props.july,\r\n                                this.props.august,\r\n                                this.props.september,\r\n                                this.props.october,\r\n                                this.props.november,\r\n                                this.props.december\r\n                            ],\r\n                            backgroundColor:'rgba(75,192,192,1)',\r\n                            borderColor: 'rgba(0,0,0,1)',\r\n                        }]\r\n                    }}\r\n                    options={{\r\n                        title:{\r\n                        display:true,\r\n                        text:'Average Expenditure Pattern per Month',\r\n                        fontSize:25\r\n                        },\r\n                        legend:{\r\n                            display:true,\r\n                            position:'bottom'\r\n                        }\r\n                        }}\r\n            />\r\n            <br></br>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.auth,\r\n        details: state.details,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(GraphBargraph2);","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\n//actions\r\nimport {clearAuth,avgFilter,updateTransactionFailure} from '../actions/pages';\r\n//components\r\nimport GraphPiechart2 from './GraphPiechart2';\r\nimport GraphLinechart2 from './GraphLinechart2';\r\nimport GraphBargraph2 from './GraphBargraph2';\r\n\r\n\r\n\r\nclass DateSelector extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            startDate:'',\r\n            endDate:'',\r\n            show:null\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            startDate:e.target.value\r\n        })\r\n    };\r\n    handleChange2 = (e) => {\r\n        this.setState({\r\n            endDate:e.target.value\r\n        })\r\n    };\r\n    handleApply = () => {\r\n        const {startDate,endDate} = this.state;\r\n        if(startDate !=='' && endDate!=='')\r\n        {\r\n            this.props.dispatch(avgFilter(startDate.split('-'),endDate.split('-')));\r\n            this.setState({show:true})\r\n        }\r\n        else{\r\n            this.props.dispatch(updateTransactionFailure(\"Please select both the Filters first !!!!\"))\r\n        }\r\n        //clear msgs shown to the user\r\n        setTimeout(() => {\r\n            this.props.dispatch(clearAuth());\r\n        }, 10000);\r\n        //console.log(this.state.endDate.split('-'));\r\n        //console.log(this.state.startDate.split('-'));  \r\n    };\r\n    render() {\r\n        const {show} = this.state;\r\n        const { piechart,linechart, bargraph,week,month} = this.props.details;\r\n        console.log(\"@@@@@@@@#######\",week,month);\r\n\r\n        return (\r\n            <div>\r\n                Start Date  &nbsp;&nbsp;\r\n                <input type=\"date\" onChange={this.handleChange} placeholder=\"Start Date\" style={{width:\"200px\",fontSize:\"15px\"}}/>&nbsp;&nbsp;\r\n                End Date   &nbsp;&nbsp;\r\n                <input type=\"date\" onChange={this.handleChange2} placeholder=\"End Date\" style={{width:\"200px\",fontSize:\"15px\"}}/>&nbsp;&nbsp;\r\n                <button style={{width:\"50px\",fontSize:\"15px\"}} onClick={this.handleApply}>Apply</button>\r\n                <br></br>\r\n                {(linechart && show) && <GraphLinechart2\r\n                monday={week.Monday}\r\n                tuesday={week.Tuesday}\r\n                wednesday={week.Wednesday}\r\n                thursday={week.Thursday}\r\n                friday={week.Friday}\r\n                saturday={week.Saturday}\r\n                sunday={week.Sunday}\r\n                january={month.January}\r\n                february={month.February}\r\n                march={month.March}\r\n                april={month.April}\r\n                may={month.May}\r\n                june={month.June}\r\n                july={month.July}\r\n                august={month.August}\r\n                september={month.September}\r\n                october={month.October}\r\n                november={month.November}\r\n                december={month.December}\r\n                />}\r\n                {( piechart && show) && <GraphPiechart2\r\n                 monday={week.Monday}\r\n                 tuesday={week.Tuesday}\r\n                 wednesday={week.Wednesday}\r\n                 thursday={week.Thursday}\r\n                 friday={week.Friday}\r\n                 saturday={week.Saturday}\r\n                 sundy={week.Sunday}\r\n                 january={month.January}\r\n                 february={month.February}\r\n                 march={month.March}\r\n                 april={month.April}\r\n                 may={month.May}\r\n                 june={month.June}\r\n                 july={month.July}\r\n                 august={month.August}\r\n                 september={month.September}\r\n                 october={month.October}\r\n                 november={month.November}\r\n                 december={month.December}\r\n                />}\r\n                {(bargraph && show) && <GraphBargraph2\r\n                 monday={week.Monday}\r\n                 tuesday={week.Tuesday}\r\n                 wednesday={week.Wednesday}\r\n                 thursday={week.Thursday}\r\n                 friday={week.Friday}\r\n                 saturday={week.Saturday}\r\n                 sundy={week.Sunday}\r\n                 january={month.January}\r\n                 february={month.February}\r\n                 march={month.March}\r\n                 april={month.April}\r\n                 may={month.May}\r\n                 june={month.June}\r\n                 july={month.July}\r\n                 august={month.August}\r\n                 september={month.September}\r\n                 october={month.October}\r\n                 november={month.November}\r\n                 december={month.December}\r\n                />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.auth,\r\n        details: state.details,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(DateSelector);","import React, { Component } from 'react';\r\nimport {Pie} from 'react-chartjs-2';\r\nimport {connect} from \"react-redux\";\r\nimport Dateselector from './DateSelector';\r\n\r\n\r\n\r\nclass  GraphPiechart extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            chartData:{\r\n                labels:['Food','HealthCare','Housing','Income','Recreation','Transportation','Stocks','Expenditure','Savings'],\r\n                datasets:[{\r\n                    label:'Amount Spent(Rs)',\r\n                    data:[\r\n                        props.food,\r\n                        props.healthcare,\r\n                        props.housing,\r\n                        props.income,\r\n                        props.recreation,\r\n                        props.transportation,\r\n                        props.stock,\r\n                        props.expenditure,\r\n                        props.savings\r\n                    ],\r\n                    backgroundColor:[\r\n                        'rgba(75,99,132,0.6)',\r\n                        'rgba(54,162,235,0.6)',\r\n                        'rgba(75,192,92,0.6)',\r\n                        'rgba(15,142,56,0.6)',\r\n                        'rgba(75,192,192,0.6)',\r\n                        'rgba(153,102,255,0.6)',\r\n                        'rgba(255,159,64,0.6)',\r\n                        'rgba(255,99,132,0.6)',\r\n                        'rgba(155,240,202,0.6)'\r\n\r\n                    ],\r\n                    borderColor: 'rgba(0,0,0,1)',\r\n\r\n\r\n                }]\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                   <div className=\"update-box\" >\r\n                       <Dateselector/>\r\n                       <Pie \r\n                            data={this.state.chartData}\r\n                            options={{\r\n                                title:{\r\n                                    display:true,\r\n                                    text:'Transactions',\r\n                                    fontSize:25\r\n                                },\r\n                                legend:{\r\n                                    display:true,\r\n                                    position:'right'\r\n                                }\r\n                            }}\r\n                        />\r\n                   </div>\r\n                    \r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.auth,\r\n        details: state.details,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(GraphPiechart);","import React, { Component } from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport {connect} from \"react-redux\";\r\nimport Dateselector from './DateSelector';\r\n\r\n\r\n\r\nclass  GraphLinechart extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            chartData:{\r\n                labels:['Food','HealthCare','Housing','Income','Recreation','Transportation','Stocks','Expenditure','Savings'],\r\n                datasets:[{\r\n                    label:'Amount Spent(Rs)',\r\n                    data:[\r\n                        props.food,\r\n                        props.healthcare,\r\n                        props.housing,\r\n                        props.income,\r\n                        props.recreation,\r\n                        props.transportation,\r\n                        props.stock,\r\n                        props.expenditure,\r\n                        props.savings\r\n                    ],\r\n                    backgroundColor:'rgba(75,192,192,1)',\r\n                    borderColor: 'rgba(0,0,0,1)',\r\n                }]\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                   <div className=\"update-box\" >\r\n                       <Dateselector/>\r\n                       < Line\r\n                            data={this.state.chartData}\r\n                            options={{\r\n                                title:{\r\n                                    display:true,\r\n                                    text:'Transactions',\r\n                                    fontSize:25\r\n                                },\r\n                                legend:{\r\n                                    display:true,\r\n                                    position:'right'\r\n                                }\r\n                            }}\r\n                        />\r\n                   </div>\r\n                    \r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.auth,\r\n        details: state.details,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(GraphLinechart);","import React, { Component } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { connect } from \"react-redux\";\r\nimport Dateselector from \"./DateSelector\";\r\n\r\nclass GraphBargraph extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chartData: {\r\n        labels: [\r\n          \"Food\",\r\n          \"HealthCare\",\r\n          \"Housing\",\r\n          \"Income\",\r\n          \"Recreation\",\r\n          \"Transportation\",\r\n          \"Stocks\",\r\n          \"Expenditure\",\r\n          \"Savings\",\r\n        ],\r\n        datasets: [\r\n          {\r\n            label: \"Amount Spent(Rs)\",\r\n            data: [\r\n              props.food,\r\n              props.healthcare,\r\n              props.housing,\r\n              props.income,\r\n              props.recreation,\r\n              props.transportation,\r\n              props.stock,\r\n              props.expenditure,\r\n              props.savings,\r\n            ],\r\n            backgroundColor: \"rgba(75,192,192,1)\",\r\n            borderColor: \"rgba(0,0,0,1)\",\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"update-box\">\r\n        <Dateselector />\r\n        <Bar\r\n          data={this.state.chartData}\r\n          options={{\r\n            title: {\r\n              display: true,\r\n              text: \"Transactions\",\r\n              fontSize: 25,\r\n            },\r\n            legend: {\r\n              display: true,\r\n              position: \"bottom\",\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    auth: state.auth,\r\n    details: state.details,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(GraphBargraph);\r\n","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\n//actions\r\nimport {\r\n    clearAuth,\r\n    fetchTransactions,\r\n    fetchDetails,\r\n    updateTransaction,\r\n    updateTransactionFailure,\r\n    filterTransaction1,\r\n    filterTransaction2,\r\n    filterTransaction3,\r\n    filterTransaction4,\r\n    filterTransaction5,\r\n    filterTransaction6,\r\n    filterTransaction7,\r\n    showBarGraph,\r\n    showPieChart,\r\n    showLineChart,\r\n    hideGraph\r\n} from '../actions/pages';\r\n//components\r\nimport TransactionEntry from './TransactionEntry';\r\nimport GraphPiechart from './GraphPiechart';\r\nimport GraphLinechart from './GraphLinechart';\r\nimport GraphBargraph from './GraphBargraph';\r\n\r\n\r\n\r\nclass PastTransactions extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            category: '0',\r\n            amount: '',\r\n            type: 'true',\r\n            type2:'false',\r\n            description: '',\r\n            date:'',\r\n            month:'',\r\n            year:'',\r\n            chart:'',\r\n            barGraph:null,\r\n            pieChart:null\r\n        };\r\n    }\r\n    //handle different filters\r\n    handleChart = (event) => {\r\n        this.setState({chart: event.target.value});\r\n    }\r\n    handleDate = (event) => {\r\n        this.setState({date: event.target.value});\r\n    }\r\n    handleMonth = (event) => {\r\n        this.setState({month: event.target.value});\r\n    }\r\n    handleYear = (event) => {\r\n        this.setState({year: event.target.value});\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({category: event.target.value});\r\n    }\r\n    handleChange2 = (event) => {\r\n        this.setState({amount: event.target.value});\r\n    }\r\n\r\n    handleChange3 = (event) => {\r\n        this.setState({type: event.target.value});\r\n    }\r\n    handleChange4 = (event) => {\r\n        this.setState({description: event.target.value});\r\n    }\r\n\r\n    //handle submit button\r\n    handleSubmit = (e) => {\r\n        //call dispatch\r\n        e.preventDefault();\r\n        var {category, type, description, amount} = this.state;\r\n        if(category!=='0' && category !== '6')\r\n        {\r\n            type = this.state.type2;\r\n        }\r\n\r\n        this.props.dispatch(updateTransaction(category, type, description, amount, this.props.details.id));\r\n        setTimeout(() => {\r\n            //this.forceUpdate();\r\n            this.props.dispatch(clearAuth());\r\n        }, 50000);\r\n\r\n    }\r\n\r\n    //handle apply filters button\r\n    handleSubmit2 = (e) => {\r\n        //call dispatch\r\n        e.preventDefault();\r\n        const {date,month,year} = this.state;\r\n        if(date !=='' && month!=='' && year!=='')\r\n        {\r\n            this.props.dispatch(filterTransaction1(date,month,year));\r\n        }\r\n        else if(date !=='' && month!=='')\r\n        {\r\n            this.props.dispatch(filterTransaction2(date,month));\r\n        }\r\n        else if(date !=='' && year!=='')\r\n        {\r\n            this.props.dispatch(filterTransaction3(date,year));\r\n        }\r\n        else if(month !=='' && year!=='')\r\n        {\r\n            this.props.dispatch(filterTransaction4(month,year));\r\n        }\r\n        else if(date !=='')\r\n        {\r\n            this.props.dispatch(filterTransaction5(date));\r\n        }\r\n        else if(month !=='')\r\n        {\r\n            this.props.dispatch(filterTransaction6(month));\r\n        }\r\n        else if(year !=='')\r\n        {\r\n            this.props.dispatch(filterTransaction7(year));\r\n        }\r\n        else{\r\n            this.props.dispatch(updateTransactionFailure(\"Please select the Filter to be applied first !!!!\"))\r\n        }\r\n        this.setState({month:'',date:'',year:''});\r\n        //clear msgs shown to the user\r\n        setTimeout(() => {\r\n            this.props.dispatch(clearAuth());\r\n        }, 10000);\r\n\r\n    }\r\n\r\n    // handle visualizations button\r\n    // show visualizations\r\n    handleSubmit3 = (e) => {\r\n        //call dispatch\r\n        e.preventDefault();\r\n        const {chart} = this.state;\r\n        if(chart === 'pieChart')\r\n        {\r\n            this.props.dispatch(showPieChart());\r\n            this.setState({pieChart:true,barGraph:null});\r\n        }\r\n        else if(chart === 'barGraph')\r\n        {\r\n            this.props.dispatch(showBarGraph());\r\n            this.setState({barGraph:true,pieChart:null});\r\n        }\r\n        else if(chart === 'lineChart')\r\n        {\r\n            this.props.dispatch(showLineChart());\r\n            this.setState({barGraph:null,pieChart:null});\r\n        }\r\n        else{\r\n            this.props.dispatch(updateTransactionFailure(\"Please select the Filter to be applied first !!!!\"));\r\n            this.setState({\r\n            barGraph:null,\r\n            pieChart:null,\r\n            chart:''})\r\n        }\r\n        setTimeout(() => {\r\n            this.props.dispatch(clearAuth());\r\n        }, 10000);\r\n\r\n    }\r\n    //hide visualizations\r\n    handleSubmit4 = (e) => {\r\n        //call dispatch\r\n        e.preventDefault();\r\n        this.props.dispatch(hideGraph());\r\n            this.setState({\r\n            barGraph:null,\r\n            pieChart:null,\r\n            chart:''})\r\n        setTimeout(() => {\r\n            this.props.dispatch(clearAuth());\r\n        }, 10000);\r\n\r\n    }\r\n\r\n\r\n    //fetch list of past transactions\r\n    //fetch list of details for visualization\r\n    componentDidMount() {\r\n        this.props.dispatch(fetchTransactions());\r\n        this.props.dispatch(fetchDetails());\r\n    }\r\n    //clear msgs shown to the user\r\n    componentWillUnmount() {\r\n        this.props.dispatch(clearAuth());\r\n    }\r\n    onChange = date => this.setState({ date })\r\n\r\n    render() {\r\n        const {success, error} = this.props.details;\r\n        const {transactions, loading, update, inProgress, piechart,linechart, bargraph,detailsList} = this.props.details;\r\n        var dummy={};\r\n        if(detailsList.length !== 0 )\r\n        {\r\n            dummy=detailsList[detailsList.length -1];\r\n        }\r\n        if (loading) {\r\n            return <h2>Loading.....</h2>;\r\n        }\r\n\r\n        return (\r\n            <div className=\"form-box2\">\r\n                {error && (\r\n                    <div className=\"alert-warn\">\r\n                        <button>{error}</button>\r\n                    </div>\r\n                )}\r\n                {success && (\r\n                    <div className=\"alert-done\">\r\n                        <button>{success}</button>\r\n                    </div>\r\n                )}\r\n                <div className=\"filters\">\r\n                    <div className=\"Leftfilter\">\r\n                    <select onChange={this.handleDate} value={this.state.date}>\r\n                                    <option value=\"\" disabled>Date</option>\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"02\">2</option>\r\n                                    <option value=\"03\">3</option>\r\n                                    <option value=\"04\">4</option>\r\n                                    <option value=\"05\">5</option>\r\n                                    <option value=\"06\">6</option>\r\n                                    <option value=\"07\">7</option>\r\n                                    <option value=\"08\">8</option>\r\n                                    <option value=\"09\">9</option>\r\n                                    <option value=\"10\">10</option>\r\n                                    <option value=\"11\">11</option>\r\n                                    <option value=\"12\">12</option>\r\n                                    <option value=\"13\">13</option>\r\n                                    <option value=\"14\">14</option>\r\n                                    <option value=\"15\">15</option>\r\n                                    <option value=\"16\">16</option>\r\n                                    <option value=\"17\">17</option>\r\n                                    <option value=\"18\">18</option>\r\n                                    <option value=\"19\">19</option>\r\n                                    <option value=\"20\">20</option>\r\n                                    <option value=\"21\">21</option>\r\n                                    <option value=\"22\">22</option>\r\n                                    <option value=\"23\">23</option>\r\n                                    <option value=\"24\">24</option>\r\n                                    <option value=\"25\">25</option>\r\n                                    <option value=\"26\">26</option>\r\n                                    <option value=\"27\">27</option>\r\n                                    <option value=\"28\">28</option>\r\n                                    <option value=\"29\">29</option>\r\n                                    <option value=\"30\">30</option>\r\n                                    <option value=\"31\">31</option>\r\n                                </select>\r\n                                <select onChange={this.handleMonth} value={this.state.month}>\r\n                                <option value=\"\" disabled>Month</option>\r\n                                    <option value=\"01\">January</option>\r\n                                    <option value=\"02\">February</option>\r\n                                    <option value=\"03\">March</option>\r\n                                    <option value=\"04\">April</option>\r\n                                    <option value=\"05\">May</option>\r\n                                    <option value=\"06\"> June</option>\r\n                                    <option value=\"07\">July</option>\r\n                                    <option value=\"08\">August</option>\r\n                                    <option value=\"09\"> September</option>\r\n                                    <option value=\"10\">October</option>\r\n                                    <option value=\"11\">November</option>\r\n                                    <option value=\"12\">December</option>\r\n                                </select>\r\n                                <select onChange={this.handleYear} value={this.state.year}>\r\n                                <option value=\"\" disabled>Year</option>\r\n                                    <option value=\"2020\">2020</option>\r\n                                </select>\r\n                                <button className=\"apply\" onClick={this.handleSubmit2}>Apply</button>  \r\n                    </div>\r\n                    <div className=\"Rightfilter\">  \r\n                        <select onChange={this.handleChart} value={this.state.chart}>\r\n                            <option value=\"\" disabled>Select Type</option>\r\n                            {(piechart || bargraph || linechart) && \r\n                            <option value=\"barGraph\" disabled>Bar Graph</option>}\r\n                            {(piechart || bargraph || linechart) &&\r\n                            <option value=\"pieChart\" disabled>Pie Chart</option>}\r\n                            {(piechart || bargraph || linechart) &&\r\n                            <option value=\"lineChart\" disabled>Line Graph</option>}\r\n\r\n\r\n                            {(!piechart && !bargraph && !linechart) && \r\n                            <option value=\"barGraph\">Bar Graph</option>}\r\n                            {(!piechart && !bargraph && !linechart) && \r\n                            <option value=\"pieChart\">Pie Chart</option>}\r\n                            {(!piechart && !bargraph && !linechart) && \r\n                            <option value=\"lineChart\">Line Graph</option>}\r\n                        </select> \r\n                            {(!piechart && !bargraph && !linechart) && <button className=\"show\" onClick={this.handleSubmit3}> Show Visualizations </button> }\r\n                            {(piechart || bargraph || linechart) && <button className=\"hide\" onClick={this.handleSubmit4}> Hide Visualizations </button> }\r\n\r\n                    </div>\r\n                   \r\n                </div>\r\n                <br></br>\r\n                <br></br>\r\n                {(detailsList.length !== 0 && linechart) && <GraphLinechart\r\n                food={dummy.food}\r\n                healthcare={dummy.healthcare}\r\n                housing={dummy.housing}\r\n                income={dummy.income}\r\n                recreation={dummy.recreation}\r\n                savings = {dummy.savings}\r\n                stock = {dummy.stock}\r\n                transportation = {dummy.transportation}\r\n                expenditure = {dummy.totalExpenditure}\r\n                />}\r\n                {(detailsList.length !== 0 && piechart) && <GraphPiechart\r\n                food={dummy.food}\r\n                healthcare={dummy.healthcare}\r\n                housing={dummy.housing}\r\n                income={dummy.income}\r\n                recreation={dummy.recreation}\r\n                stock = {dummy.stock}\r\n                savings = {dummy.savings}\r\n                transportation = {dummy.transportation}\r\n                expenditure = {dummy.totalExpenditure}\r\n                />}\r\n                {(detailsList.length !== 0 && bargraph) && <GraphBargraph\r\n                food={dummy.food}\r\n                healthcare={dummy.healthcare}\r\n                housing={dummy.housing}\r\n                income={dummy.income}\r\n                recreation={dummy.recreation}\r\n                stock = {dummy.stock}\r\n                savings = {dummy.savings}\r\n                transportation = {dummy.transportation}\r\n                expenditure = {dummy.totalExpenditure}\r\n                />}\r\n                {transactions.length === 0 &&  <h2>No Transactions to Display ..</h2>}\r\n\r\n                {\r\n                    update &&\r\n                    <div>\r\n                        <br></br><br></br>\r\n                        <h2>UPDATE TRANSACTION</h2><br/>\r\n                        <div className=\"update-box\">\r\n                            <div>\r\n                                <label>Choose Category</label>\r\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                <select onChange={this.handleChange} value={this.state.category} placeholder=\"Category\">\r\n                                    <option value=\"0\">Income</option>\r\n                                    <option value=\"1\">Housing</option>\r\n                                    <option value=\"2\">Food</option>\r\n                                    <option value=\"3\">Healthcare</option>\r\n                                    <option value=\"4\">Transportation</option>\r\n                                    <option value=\"5\">Recreation</option>\r\n                                    <option value=\"6\">Other</option>\r\n                                </select>\r\n                            </div>\r\n                            <br/>\r\n                            <div>\r\n                                <label>Description</label>\r\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                <input type=\"text\" onChange={this.handleChange4} value={this.state.description}\r\n                                       placeholder=\"Description\" required/>\r\n                            </div>\r\n                            <br/>\r\n                            <div>\r\n                                <label>Enter Amount</label>\r\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                <input type=\"text\" onChange={this.handleChange2} value={this.state.amount}\r\n                                       placeholder=\"00.00\" required/>\r\n                            </div>\r\n                            <br/>\r\n                            <div>\r\n                                <label>Type</label>\r\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                {this.state.category === '6' && (\r\n                                <select onChange={this.handleChange3} value={this.state.type} placeholder=\"Type\">\r\n                                    <option value=\"true\">Credit</option>\r\n                                    <option value=\"false\">Debit</option>\r\n                                </select>)\r\n                                }\r\n                                {this.state.category === '0' && (\r\n                                    <select onChange={this.handleChange3} value={this.state.type} placeholder=\"Type\">\r\n                                        <option value=\"true\">Credit</option>\r\n                                        <option value=\"false\" disabled>Debit</option>\r\n                                    </select>)\r\n                                    }\r\n                                    {(this.state.category !== '6' && this.state.category !== '0' ) && (\r\n                                    <select onChange={this.handleChange3} value={this.state.type2} placeholder=\"Type\">\r\n                                        <option value=\"false\">Debit</option>\r\n                                        <option value=\"true\" disabled>Credit</option>\r\n                                        \r\n                                    </select>)\r\n                                    }\r\n                            </div>\r\n                            <br/><br/>\r\n                            <button className=\"save\" onClick={this.handleSubmit} disabled={inProgress}>Save</button>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                }\r\n               <br></br>\r\n               {transactions.length !== 0 && \r\n               <div>\r\n                <h2>PAST TRANSACTIONS</h2>\r\n                <br></br>\r\n                <div className=\"transaction-entry\">\r\n                    <div className=\"number headers\"> S.No.</div>\r\n                    <div className=\"category headers\">Category</div>\r\n                    <div className=\"amount headers\">Amount &nbsp;(Rs.)</div>\r\n                    <div className=\"type headers\">Type</div>\r\n                    <div className=\"Options headers\">Options</div>\r\n                </div>\r\n                \r\n                <div className=\"transactions-box\">\r\n                    {transactions.map((transaction, index) => (\r\n                        <TransactionEntry transaction={transaction} index={index}\r\n                                          key={`transaction.category-${index}`}/>\r\n                    ))\r\n                    }\r\n                </div></div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.auth,\r\n        details: state.details,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(PastTransactions);\r\n","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\n//actions\r\nimport {addTransaction, clearAuth, fetchStocklist, updateTransactionFailure} from \"../actions/pages\";\r\n\r\n\r\nclass StockPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            amount: \"\",\r\n        };\r\n    }\r\n\r\n    //handle input fields\r\n    handleAmount = (e) => {\r\n        this.setState({\r\n            amount: e.target.value,\r\n        });\r\n    };\r\n    //handle form submit\r\n    handleSubmitForm = (stock) => {\r\n        const {amount} = this.state;\r\n        if (amount !== '') {\r\n            var category = \"7\";\r\n            var type = \"true\";\r\n            var description = stock + \" sold\";\r\n            this.props.dispatch(addTransaction(category, type, description, amount));\r\n\r\n            setTimeout(() => {\r\n                this.props.dispatch(clearAuth());\r\n\r\n            }, 10000);\r\n        } else {\r\n            this.props.dispatch(updateTransactionFailure(\"Please give the right amount !!\"))\r\n        }\r\n\r\n    };\r\n\r\n    //fetch stocklist\r\n    componentDidMount() {\r\n        this.props.dispatch(fetchStocklist());\r\n    }\r\n\r\n    render() {\r\n        const {stocklist} = this.props.details;\r\n        const {error, success} = this.props.details;\r\n\r\n\r\n        return (\r\n            <div>\r\n                <h2>\r\n                    <br></br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Stocklist\r\n                </h2>\r\n                <div className=\"form-box2\">\r\n                    {error && (\r\n                        <div className=\"alert-warn\">\r\n                            <button>Please give the right amount !!</button>\r\n                        </div>\r\n                    )}\r\n                    {success && (\r\n                        <div className=\"alert-done\">\r\n                            <button>Stocks sold successfully</button>\r\n                        </div>\r\n                    )}\r\n\r\n                    <div className=\"wishlist-entry\">\r\n                        <div className=\"numbs headers\"> S.No.</div>\r\n                        <div className=\"stocks headers\">Stocks</div>\r\n                        <div className=\"owned headers\">Owned Stocks(Rs.)</div>\r\n                        <div className=\"prices headers\">Stock Price (Rs.)</div>\r\n                        <div className=\"sellprices headers\">Sell Stocks (Rs.)</div>\r\n                        <div className=\"numbs headers\">Sell</div>\r\n\r\n                    </div>\r\n                    {stocklist.length === 0 && <div><br></br><h2>No Stocklist to display</h2></div>}\r\n                    <div className=\"transactions-box\">\r\n                        {stocklist.map((entry, index) => (\r\n                            <div className=\"transaction-entry\" key={`entry.createdAt-${index}`}>\r\n                                <div className=\"numbs\"> &nbsp;&nbsp;{index + 1} </div>\r\n                                <div className=\"stocks \">&nbsp;&nbsp;&nbsp;&nbsp;{entry.stock}</div>\r\n                                <div\r\n                                    className=\"owned\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{entry.owned}</div>\r\n                                <div\r\n                                    className=\"prices\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{entry.current_price}</div>\r\n                                <div className=\"sellprices\"><input type=\"text\" onChange={this.handleAmount}\r\n                                                                   placeholder=\"Enter Amount(Rs)\"/></div>\r\n                                <div className=\"numbs\">\r\n                                    <button onClick={() => this.handleSubmitForm(entry.stock)}>SELL</button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.auth,\r\n        details: state.details,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(StockPage);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n\r\nclass WishlistEntry extends Component {\r\n  render() {\r\n    const { entry } = this.props;\r\n    return (\r\n      <div style={{backgroundColor:\"#f1f1f1\",border:\"2px solid #f1f1f1\"}}>\r\n        <img src={entry.image_url} alt=\"product_img\" style={{width:\"500px\",height:\"500px\"}} />\r\n        <p className=\"legend\">\r\n          <a\r\n            href={entry.url}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            style={{ color: \"white\", fontSize: \"15px\" }}\r\n          >\r\n            {entry.title}\r\n            <br></br>Price - Rs {entry.price}\r\n          </a>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    auth: state.auth,\r\n    details: state.details,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(WishlistEntry);\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\n//actions\r\nimport {fetchWishlist} from \"../actions/pages\";\r\n//component\r\nimport WishlistEntry from './WishlistEntry';\r\n\r\n\r\n\r\n\r\nclass AmazonPage extends Component {\r\n\r\n     //fetch wishlist\r\n     componentDidMount(){ \r\n        this.props.dispatch(fetchWishlist());\r\n    }\r\n\r\n\r\n    render() {\r\n    const {wishlist}=this.props.details;\r\n\r\n        return (\r\n            <div>\r\n               <h2><br></br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Amazon Wishlist</h2>\r\n               <div className=\"form-box2\">\r\n               {wishlist.length === 0 && <div><br></br><h2>No Wishlist to display</h2></div>}\r\n               <div className=\"transactions-box\">\r\n               <Carousel showArrows={true} showThumbs={true}>\r\n                { wishlist.map((entry,index)=>(\r\n                        \r\n                        <WishlistEntry entry={entry} index={index} key={`entry.createdAt-${index}`}/>\r\n                    ))\r\n                }\r\n                </Carousel>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.auth,\r\n        details: state.details,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(AmazonPage);","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n//components\r\nimport DetailsPage from './DetailsPage';\r\nimport ChatBotPage from './ChatBotPage';\r\nimport PastTransactions from './PastTransactions';\r\nimport StockPage from './StockPage';\r\nimport AmazonPage from './AmazonPage';\r\nimport Background from './Background';\r\n//details\r\nimport {showDetails, showChatBot,viewdetails,showStockDetails,showAmazonDetails} from \"../actions/pages\";\r\n\r\n\r\nclass Details extends Component {\r\n\r\n    //different components rendered on clicking on different tabs\r\n    applyDetailsForm = () => {    \r\n        this.props.dispatch(showDetails());\r\n        };\r\n\r\n    applyChatBot = () => {\r\n        this.props.dispatch(showChatBot());\r\n        };\r\n    applyStock = () => {\r\n        this.props.dispatch(showStockDetails());\r\n    };\r\n    applyAmazon = () => {\r\n        this.props.dispatch(showAmazonDetails());\r\n    };\r\n    viewDetails = () => {\r\n        this.props.dispatch(viewdetails());\r\n    };\r\n\r\n    render() {\r\n        const { isLoggedIn} = this.props.auth;\r\n        const {detailsForm,chatBot,viewPastDetails,amazon,stock} = this.props.details;\r\n        //so that not logged in user don't sees the details page\r\n        if (!isLoggedIn) {\r\n          return <Redirect to=\"/\" />;\r\n        }\r\n        return (\r\n            //complete page\r\n            <div className=\"home-screen\">\r\n                <Background/>\r\n\r\n                {/*box starting*/}\r\n                <div className=\"Main-Page\">\r\n                    {/*choice to select differnet tabs*/}\r\n                    <div className=\"choice\">\r\n                        <div className=\"details\">\r\n                            <button className={`tab${detailsForm?'active-tab':''}`} onClick={this.applyDetailsForm}>DETAIL FORM</button>\r\n                        </div>\r\n                        <div className=\"chatbot\">\r\n                            <button className={`tab${chatBot?'active-tab':''}`} onClick={this.applyChatBot}>Chat Bot</button>\r\n                        </div>\r\n                        <div className=\"view-details\">\r\n                            <button className={`tab${viewPastDetails?'active-tab':''}`} onClick={this.viewDetails}>Transactions</button>\r\n                        </div>\r\n                        <div className=\"amazon\">\r\n                            <button className={`tab${amazon?'active-tab':''}`} onClick={this.applyAmazon}>Amazon Details</button>\r\n                        </div>\r\n                        <div className=\"stock\">\r\n                            <button className={`tab${stock?'active-tab':''}`} onClick={this.applyStock}>Stock Details</button>\r\n                        </div>\r\n                    </div>\r\n                    {/* different components rendered on the choice of the user */}\r\n                    {detailsForm && <DetailsPage/>}\r\n                    {chatBot && <ChatBotPage/>}\r\n                    {viewPastDetails && <PastTransactions/>}\r\n                    {stock && <StockPage/>}\r\n                    {amazon && <AmazonPage/>}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.auth,\r\n        details: state.details,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Details);\r\n","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n//actions\r\nimport {fetchUser,updateProfile,updatePassword,clearAuth} from '../actions/auth';\r\n//components\r\nimport Background from './Background';\r\n\r\n\r\nclass Profilepage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            fname: '',\r\n            lname: '',\r\n            email:'',\r\n            uname:'',\r\n            password: '',\r\n            confirmPassword: '',\r\n            editMode: false,\r\n            oldpassword:''\r\n          };\r\n    }\r\n    //handle input fields\r\n    handleChange = (fieldName, val) => {\r\n        this.setState({\r\n          [fieldName]: val,\r\n        });\r\n      };\r\n      //handle save button\r\n      handleSave = () => {\r\n        var { password, confirmPassword,oldpassword, fname,lname,email ,uname} = this.state;\r\n        //call the edit dispatchers\r\n        if(fname==='')\r\n        {\r\n          fname =this.props.auth.fname;\r\n        }\r\n        if(lname==='')\r\n        {\r\n          lname =this.props.auth.lname;\r\n        }\r\n        if(uname==='')\r\n        {\r\n          uname =this.props.auth.user.username;\r\n        }\r\n        if(email==='')\r\n        {\r\n          email = this.props.auth.email;\r\n        }\r\n        //call dispatch\r\n        this.props.dispatch(updateProfile(email, fname,lname,uname));\r\n        if(oldpassword!=='' && password!=='' && confirmPassword!=='')\r\n        {\r\n        this.props.dispatch(updatePassword(oldpassword,password,confirmPassword));\r\n        }\r\n        setTimeout(()=>{this.props.dispatch(clearAuth())},10000);\r\n      };\r\n    componentDidMount() {\r\n        this.props.dispatch(fetchUser());\r\n    }\r\n    //clear displayed msgs when the component unmounts\r\n    componentWillUnmount() {\r\n      this.props.dispatch(clearAuth());\r\n  }\r\n    render() {\r\n        const {auth} = this.props;\r\n        const {lname,fname,email,isLoggedIn} = this.props.auth;\r\n        const {error,success} = auth;\r\n        const {username} = this.props.auth.user; \r\n        const { editMode } = this.state;\r\n        //so that logged in user sees the profile page\r\n        if (!isLoggedIn) {\r\n          return <Redirect to=\"/details\"/>;\r\n        }\r\n        return (\r\n          <div>\r\n            <Background/>\r\n            <div className=\"settings\">\r\n                \r\n            <div className=\"img-container\">\r\n              <img\r\n                src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSH4dcYWVFHFsz8M3Rsjpy2Hg6gQAmgbCIwWA&usqp=CAU\"\r\n                alt=\"user-dp\"\r\n              />\r\n            </div>\r\n    \r\n            {error && <div className=\"alert error-dailog\">{error}</div>}\r\n            {success && (\r\n              <div className=\"alert success-dailog\">\r\n                Successfully updated profile!\r\n              </div>\r\n            )}\r\n            <div className=\"field\">\r\n              <div className=\"field-label\">EMAIL</div>\r\n              {editMode ? (\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder={email}\r\n                  onChange={(e) => this.handleChange('email', e.target.value)}\r\n                />\r\n              ) : (\r\n                <div className=\"field-value\">{email}</div>\r\n              )}\r\n            </div>\r\n            <div className=\"field\">\r\n              <div className=\"field-label\">Username</div>\r\n              {editMode ? (\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder={username}\r\n                  onChange={(e) => this.handleChange('uname', e.target.value)}\r\n                />\r\n              ) : (\r\n                <div className=\"field-value\">{username}</div>\r\n              )}\r\n            </div>\r\n            <div className=\"field\">\r\n              <div className=\"field-label\">First Name</div>\r\n              {editMode ? (\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder={fname}\r\n                  onChange={(e) => this.handleChange('fname', e.target.value)}\r\n                />\r\n              ) : (\r\n                <div className=\"field-value\">{fname}</div>\r\n              )}\r\n            </div>\r\n            <div className=\"field\">\r\n              <div className=\"field-label\">Last Name</div>\r\n              {editMode ? (\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder={lname}\r\n                  onChange={(e) => this.handleChange('lname', e.target.value)}\r\n                />\r\n              ) : (\r\n                <div className=\"field-value\">{lname}</div>\r\n              )}\r\n            </div>\r\n            {editMode && (\r\n              <div className=\"field\">\r\n                <div className=\"field-label\">Old password</div>\r\n    \r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Old Password\"\r\n                  onChange={(e) =>\r\n                    this.handleChange('oldpassword', e.target.value)\r\n                  }\r\n                  value={this.state.oldpassword}\r\n                />\r\n              </div>\r\n            )}\r\n            {editMode && (\r\n              <div className=\"field\">\r\n                <div className=\"field-label\">New password</div>\r\n    \r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"New Password\"\r\n\r\n                  onChange={(e) => this.handleChange('password', e.target.value)}\r\n                  value={this.state.password}\r\n                />\r\n              </div>\r\n            )}\r\n    \r\n            {editMode && (\r\n              <div className=\"field\">\r\n                <div className=\"field-label\">Confirm password</div>\r\n    \r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm Password\"\r\n\r\n                  onChange={(e) =>\r\n                    this.handleChange('confirmPassword', e.target.value)\r\n                  }\r\n                  value={this.state.confirmPassword}\r\n                />\r\n              </div>\r\n            )}\r\n            \r\n    \r\n            <div className=\"btn-grp\">\r\n              {editMode ? (\r\n                <button className=\"button save-btn\" onClick={this.handleSave}>\r\n                  Save\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  className=\"button edit-btn\"\r\n                  onClick={() => this.handleChange('editMode', true)}\r\n                >\r\n                  Edit profile\r\n                </button>\r\n              )}\r\n    \r\n              {editMode && (\r\n                <div\r\n                  className=\"go-back\"\r\n                  onClick={() => this.handleChange('editMode', false)}\r\n                >\r\n                  Go back\r\n                </div>\r\n              )}\r\n          </div>\r\n            </div></div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.auth,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Profilepage);","import React, {Component} from 'react';\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {connect} from 'react-redux';\r\n//actions\r\nimport {clearAuth, reset} from \"../actions/auth\";\r\nimport {updateTransactionFailure,} from '../actions/pages';\r\n\r\n//components\r\nimport Background from './Background';\r\n\r\n\r\nclass ResetPassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pswd: '',\r\n            cpswd: ''\r\n        };\r\n    }\r\n\r\n    //to clear the error if it comes on reload or whenever the user shifts from this page\r\n    componentWillUnmount() {\r\n        this.props.dispatch(clearAuth());\r\n    }\r\n\r\n\r\n    //handle submit button\r\n    handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        const {pswd, cpswd} = this.state;\r\n        if (pswd === cpswd) {\r\n            this.props.dispatch(reset(pswd, this.props.match.params.token));\r\n        } else {\r\n            this.props.dispatch(updateTransactionFailure(\"Password and Confirm Password Fields don't match !!!!\"))\r\n        }\r\n    };\r\n    //handle input field\r\n    handlepswd = (e) => {\r\n        this.setState({\r\n            pswd: e.target.value,\r\n        });\r\n    };\r\n    handlecpswd = (e) => {\r\n        this.setState({\r\n            cpswd: e.target.value,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {token} = this.props.match.params\r\n        const {inProgress, success, error, isLoggedIn} = this.props.auth;\r\n        console.log(this.props);\r\n        console.log(token)\r\n\r\n        //so that logged in user don't see the Forgot Password page even if he tries to manupalate url\r\n        if (isLoggedIn) {\r\n            return <Redirect to=\"/details\"/>;\r\n        }\r\n        return (\r\n            <div className=\"home-screen\">\r\n                <Background/>\r\n                <div className=\"forgot-form\"><br/><br/>\r\n                    <h5 style={{paddingLeft: '65px'}}>Enter New Password</h5><br/><br/>\r\n\r\n                    <div className=\"form-fields\">\r\n                        {error && <div className=\"alert-warn\">\r\n                            <button>{error}</button>\r\n                        </div>}\r\n                        {success && <div className=\"alert-done\">\r\n                            <button>{success}</button>\r\n                        </div>}\r\n                        <br></br>\r\n                        <input type=\"password\" placeholder=\"New Password\" required onChange={this.handlepswd}/>\r\n                        <input type=\"password\" placeholder=\"Confirm Password\" required onChange={this.handlecpswd}/>\r\n                        <button onClick={this.handleSubmitForm} disabled={inProgress}>Submit</button>\r\n                        <br></br><br></br>\r\n                        <p className=\"Forgot\"> OR</p><br></br>\r\n                        <p className=\"Forgot\"><Link to=\"/login\">Login</Link> | <Link to=\"/sign-up\">New User</Link></p>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.auth,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ResetPassword);\r\n","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\n//all components \r\nimport Home from './Home'\r\nimport SignUp from './SignUp';\r\nimport Navbar from './Navbar';\r\nimport Login from './Login';\r\nimport Footer from './Footer';\r\nimport Page404 from './Page404';\r\nimport Forgot from './Forgot';\r\nimport Details from './Details';\r\nimport Profile from './Profilepage';\r\nimport ResetPassword from './ResetPassword';\r\n // @ts-ignore \r\n //to decode the token \r\n import jwt_decode from \"jwt-decode\";\r\n //actions\r\nimport {authenticateUser} from '../actions/auth';\r\n\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        const token = localStorage.getItem(\"DONNA\");\r\n\r\n        if (token) {\r\n            //if token exists decode the token and set the user details in redux store\r\n            const user = jwt_decode(token);\r\n            this.props.dispatch(\r\n                authenticateUser({\r\n                    username: user.username,\r\n                    email :user.email,\r\n                    user_id:user.user_id\r\n                })\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div>\r\n                    <Navbar/>\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Home}/>\r\n                        <Route path=\"/login\" component={Login}/>\r\n                        <Route path=\"/sign-up\" component={SignUp}/>\r\n                        <Route path=\"/forgot\" component={Forgot}/>\r\n                        <Route path=\"/profile\" component={Profile}/>\r\n                        <Route path=\"/details\" component={Details}/>\r\n                        <Route path=\"/reset_password/:token\" component={ResetPassword}/>\r\n                        <Route component={Page404}/>\r\n                    </Switch>\r\n                    <Footer/>\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.auth,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n\r\n\r\n","//action types\r\nconst {\r\n    LOGIN_START,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAILURE,\r\n    SIGNUP_START,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAILURE,\r\n    AUTHENTICATE_USER,\r\n    LOG_OUT,\r\n    CLEAR_AUTH_STATE,\r\n    FORGOT_START,\r\n    FORGOT_SUCCESS,\r\n    FORGOT_FAILURE,\r\n    SET_USER_DETAILS\r\n} = require(\"../actions/actionTypes\");\r\n\r\n//initial state \r\nconst initialAuthState = {\r\n    user: {},\r\n    details: false,\r\n    error: null,\r\n    isLoggedIn: false,\r\n    inProgress: false,\r\n    success:null,\r\n    email:'',\r\n    lname:'',\r\n    fname:''\r\n};\r\n\r\nexport default function auth(state = initialAuthState, action) {\r\n    switch (action.type) {\r\n        //clear msgs\r\n        case CLEAR_AUTH_STATE:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                success: null,\r\n            };\r\n        case FORGOT_START:\r\n        case LOGIN_START:\r\n        case SIGNUP_START:\r\n            //disable request button\r\n            return {\r\n                ...state,\r\n                inProgress: true,\r\n            };\r\n        case LOGIN_SUCCESS:\r\n            //change state of user to login\r\n            return {\r\n                ...state,\r\n                success: action.success,\r\n                isLoggedIn: true,\r\n                inProgress: false,\r\n                error: null,\r\n                user:{username:action.username,email:action.email,user_id:action.user_id},\r\n            };\r\n        case SIGNUP_SUCCESS:\r\n            //signup success\r\n            return {\r\n                ...state,\r\n                success: action.success,\r\n                inProgress: false,\r\n                error: null,\r\n            };\r\n        case FORGOT_FAILURE:\r\n        case LOGIN_FAILURE:\r\n        case SIGNUP_FAILURE:\r\n            //show msgs to user\r\n            return {\r\n                ...state,\r\n                success:null,\r\n                error: action.error,\r\n                inProgress: false,\r\n            };\r\n        case FORGOT_SUCCESS:\r\n            //mail sent to user to reset password\r\n            return {\r\n                ...state,\r\n                success:action.success,\r\n                error: null,\r\n                inProgress: false,\r\n            };\r\n        case AUTHENTICATE_USER:\r\n            //set user details in user field of redux store\r\n            return {\r\n                ...state,\r\n                user:{username:action.username,email:action.email,user_id:action.user_id},\r\n                isLoggedIn: true,\r\n            };\r\n        case LOG_OUT:\r\n            //remove details of user from user field of redux store\r\n            return {\r\n                ...state,\r\n                user: {},\r\n                isLoggedIn: false,\r\n            };\r\n        case SET_USER_DETAILS:\r\n            //set other user details in redux store\r\n            return {\r\n                ...state,\r\n                email:action.email,\r\n                fname:action.fname,\r\n                lname:action.lname\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","//actiontypes\r\nconst {\r\n    SHOW_DETAILS_PAGE,\r\n    SHOW_CHATBOT_PAGE,\r\n    VIEW_DETAILS,\r\n    SHOW_STOCK_DETAILS,\r\n    SHOW_AMAZON_DETAILS,\r\n    TRANSACTION_START,\r\n    TRANSACTION_FAILURE,\r\n    TRANSACTION_SUCCESS,\r\n    CLEAR_AUTH_STATE,\r\n    FETCH_TRANSACTIONS,\r\n    FETCH_TRANSACTION_START,\r\n    UPDATE_BOX_SHOW,\r\n    UPDATE_SUCCESS_TRANSACTION,\r\n    UPDATE_FAILURE_TRANSACTION,\r\n    DELETE_SUCCESS_TRANSACTION,\r\n    DELETE_FAILURE_TRANSACTION,\r\n    ADD_CHAT_MESSAGE,\r\n    DISPLAY_CHAT_MESSAGE,\r\n    SHOW_WISHLIST,\r\n    SHOW_STOCKLIST,\r\n    FETCH_DETAILS,\r\n    SHOW_PIECHART,\r\n    SHOW_BARGRAPH,\r\n    HIDE_GRAPH,\r\n    SHOW_LINECHART,\r\n    AVG_FETCH_DETAILS\r\n} = require(\"../actions/actionTypes\");\r\n\r\n\r\n//initial state\r\nconst initialTransactionState = {\r\n    viewPastDetails: false,\r\n    chatBot: false,\r\n    detailsForm: true,\r\n    transactions: [],\r\n    error:null,\r\n    success:null,\r\n    inProgress:false,\r\n    loading:false,\r\n    id:'',\r\n    update:null,\r\n    stock:false,\r\n    amazon:false,\r\n    messages: [],\r\n    wishlist: [],\r\n    stocklist:[],\r\n    detailsList:[],\r\n    piechart:null,\r\n    bargraph:null,\r\n    linechart:null,\r\n    week:{},\r\n    month:{}\r\n};\r\n\r\nexport default function transaction(state = initialTransactionState, action) {\r\n\r\n    switch (action.type) {\r\n        case FETCH_TRANSACTION_START:\r\n            //disable buttons\r\n            return {\r\n                ...state,\r\n                loading:true\r\n            }\r\n        //show different pages to the user\r\n        case SHOW_DETAILS_PAGE:\r\n            return {\r\n                ...state,\r\n                detailsForm: true,\r\n                chatBot: false,\r\n                viewPastDetails: false,\r\n                stock:false,\r\n                amazon:false\r\n            };\r\n        case SHOW_STOCK_DETAILS:\r\n            return {\r\n                ...state,\r\n                detailsForm: false,\r\n                chatBot: false,\r\n                viewPastDetails: false,\r\n                stock:true,\r\n                amazon:false\r\n            };\r\n        case SHOW_AMAZON_DETAILS:\r\n            return {\r\n                ...state,\r\n                detailsForm: false,\r\n                chatBot: false,\r\n                viewPastDetails: false,\r\n                stock:false,\r\n                amazon:true\r\n            };\r\n        case SHOW_CHATBOT_PAGE:\r\n            return {\r\n                ...state,\r\n                detailsForm: false,\r\n                chatBot: true,\r\n                viewPastDetails: false,\r\n                stock:false,\r\n                amazon:false\r\n            };\r\n        case VIEW_DETAILS:\r\n            return {\r\n                ...state,\r\n                detailsForm: false,\r\n                chatBot: false,\r\n                viewPastDetails:true,\r\n                stock:false,\r\n                amazon:false\r\n            }\r\n        case TRANSACTION_START:\r\n            //disable transactions button\r\n            return {\r\n                ...state,\r\n                inProgress: true,\r\n            };\r\n            //show msgs to user\r\n        case TRANSACTION_FAILURE:\r\n            return {\r\n                ...state,\r\n                success:null,\r\n                error: action.error,\r\n                inProgress: false,\r\n            };\r\n        case TRANSACTION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                success: action.success,\r\n                inProgress: false,\r\n                error: null,\r\n            };\r\n            //fetch details of the transactions for visualization\r\n        case FETCH_DETAILS:\r\n            return {\r\n                ...state,\r\n                detailsList:action.details,\r\n            }\r\n            //clear msgs when unmounting\r\n        case CLEAR_AUTH_STATE:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                success: null,\r\n                update:null,\r\n            };\r\n            //fetch past transactions to display\r\n        case FETCH_TRANSACTIONS:\r\n            return {\r\n                ...state,\r\n                transactions : action.transactions,\r\n                loading:false,\r\n            }\r\n            //show update box to user to receive new entries\r\n        case UPDATE_BOX_SHOW:\r\n            return {\r\n                ...state,\r\n                id:action.id,\r\n                update:true,\r\n            }\r\n            //show delete and update success /failure msgs\r\n        case DELETE_SUCCESS_TRANSACTION:\r\n        case UPDATE_SUCCESS_TRANSACTION:\r\n            return{\r\n                ...state,\r\n                id:'',\r\n                update:null,\r\n                success:action.success,\r\n                error:null\r\n            }\r\n        case DELETE_FAILURE_TRANSACTION:\r\n        case UPDATE_FAILURE_TRANSACTION:\r\n            return{\r\n                ...state,\r\n                id:'',\r\n                update:null,\r\n                error:action.error,\r\n                success:null\r\n            }\r\n            //add user msgs in messages list\r\n        case DISPLAY_CHAT_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages:action.chatMsg\r\n            }\r\n            //append chatbot msg\r\n        case ADD_CHAT_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages:[...state.messages,action.chatMsg]\r\n            }\r\n            //show amazon wishlist to user\r\n        case SHOW_WISHLIST:\r\n            return {\r\n                ...state,\r\n                wishlist:action.wishlist\r\n            }\r\n            //show stocklist to user\r\n        case SHOW_STOCKLIST:\r\n            return {\r\n                ...state,\r\n                stocklist:action.stocklist\r\n            }\r\n            //apply type of graph filter\r\n        case SHOW_BARGRAPH:\r\n            return {\r\n                ...state,\r\n                bargraph:true,\r\n                piechart:null,\r\n                linechart:null\r\n            }\r\n        case SHOW_PIECHART:\r\n            return {\r\n                ...state,\r\n                bargraph:null,\r\n                piechart:true,\r\n                linechart:null\r\n            }\r\n        case SHOW_LINECHART:\r\n            return {\r\n                ...state,\r\n                bargraph:null,\r\n                piechart:null,\r\n                linechart:true\r\n            }\r\n        case HIDE_GRAPH:\r\n            return {\r\n                ...state,\r\n                bargraph:null,\r\n                piechart:null,\r\n                linechart:null\r\n            }\r\n        case AVG_FETCH_DETAILS:\r\n            return {\r\n                ...state,\r\n                week:action.week,\r\n                month:action.month\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {combineReducers} from \"redux\";\r\nimport auth from \"./auth\";\r\nimport details from './details'\r\n\r\nexport default combineReducers({auth, details});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {App} from './components';\r\nimport {configureStore} from './store';\r\nimport {Provider} from 'react-redux';\r\n\r\nconst store = configureStore();\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from '../reducers';\r\n\r\nlet store;\r\n\r\nexport function configureStore() {\r\n    store = createStore(reducers, applyMiddleware(thunk));\r\n    return store;\r\n}\r\n"],"sourceRoot":""}